
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001074  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00001074  00001108  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000016  00800076  00800076  0000111e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000111e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001150  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  0000118c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001041  00000000  00000000  00001274  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000885  00000000  00000000  000022b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000815  00000000  00000000  00002b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000288  00000000  00000000  00003350  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000477  00000000  00000000  000035d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000082c  00000000  00000000  00003a4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000427b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__vector_16>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__fp_cmp+0x1e>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <checkforinput+0x18>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <displayall+0x76>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <output+0xa>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e4 e7       	ldi	r30, 0x74	; 116
     162:	f0 e1       	ldi	r31, 0x10	; 16
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a6 37       	cpi	r26, 0x76	; 118
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a6 e7       	ldi	r26, 0x76	; 118
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	ac 38       	cpi	r26, 0x8C	; 140
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 89 03 	call	0x712	; 0x712 <main>
     184:	0c 94 38 08 	jmp	0x1070	; 0x1070 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <wait_avr>:
	WDTCR = 15;
}

void
wait_avr(unsigned short msec)
{
     18c:	9c 01       	movw	r18, r24
	TCCR0 = 2;
     18e:	82 e0       	ldi	r24, 0x02	; 2
     190:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00001);
     192:	86 ef       	ldi	r24, 0xF6	; 246

void
wait_avr(unsigned short msec)
{
	TCCR0 = 2;
	while (msec--) {
     194:	08 c0       	rjmp	.+16     	; 0x1a6 <wait_avr+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00001);
     196:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
     198:	98 b7       	in	r25, 0x38	; 56
     19a:	91 60       	ori	r25, 0x01	; 1
     19c:	98 bf       	out	0x38, r25	; 56
		WDR();
     19e:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
     1a0:	08 b6       	in	r0, 0x38	; 56
     1a2:	00 fe       	sbrs	r0, 0
     1a4:	fd cf       	rjmp	.-6      	; 0x1a0 <wait_avr+0x14>

void
wait_avr(unsigned short msec)
{
	TCCR0 = 2;
	while (msec--) {
     1a6:	21 50       	subi	r18, 0x01	; 1
     1a8:	31 09       	sbc	r19, r1
     1aa:	a8 f7       	brcc	.-22     	; 0x196 <wait_avr+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 8) * 0.00001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
     1ac:	13 be       	out	0x33, r1	; 51
     1ae:	08 95       	ret

000001b0 <output>:
{
	char c;
	while ((c = pgm_read_byte(s++)) != 0) {
		write(c, 1);
	}
}
     1b0:	66 23       	and	r22, r22
     1b2:	11 f0       	breq	.+4      	; 0x1b8 <output+0x8>
     1b4:	c0 9a       	sbi	0x18, 0	; 24
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <output+0xa>
     1b8:	c0 98       	cbi	0x18, 0	; 24
     1ba:	c1 98       	cbi	0x18, 1	; 24
     1bc:	82 bb       	out	0x12, r24	; 18
     1be:	8f ef       	ldi	r24, 0xFF	; 255
     1c0:	81 bb       	out	0x11, r24	; 17
     1c2:	c2 9a       	sbi	0x18, 2	; 24
     1c4:	00 00       	nop
     1c6:	00 00       	nop
     1c8:	00 00       	nop
     1ca:	c2 98       	cbi	0x18, 2	; 24
     1cc:	08 95       	ret

000001ce <write>:
     1ce:	c0 98       	cbi	0x18, 0	; 24
     1d0:	c1 9a       	sbi	0x18, 1	; 24
     1d2:	11 ba       	out	0x11, r1	; 17
     1d4:	90 b3       	in	r25, 0x10	; 16
     1d6:	c2 9a       	sbi	0x18, 2	; 24
     1d8:	00 00       	nop
     1da:	00 00       	nop
     1dc:	00 00       	nop
     1de:	11 ba       	out	0x11, r1	; 17
     1e0:	90 b3       	in	r25, 0x10	; 16
     1e2:	c2 98       	cbi	0x18, 2	; 24
     1e4:	99 23       	and	r25, r25
     1e6:	9c f3       	brlt	.-26     	; 0x1ce <write>
     1e8:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <output>
     1ec:	08 95       	ret

000001ee <ini_lcd>:
     1ee:	b8 9a       	sbi	0x17, 0	; 23
     1f0:	b9 9a       	sbi	0x17, 1	; 23
     1f2:	ba 9a       	sbi	0x17, 2	; 23
     1f4:	80 e1       	ldi	r24, 0x10	; 16
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	0e 94 c6 00 	call	0x18c	; 0x18c <wait_avr>
     1fc:	60 e0       	ldi	r22, 0x00	; 0
     1fe:	80 e3       	ldi	r24, 0x30	; 48
     200:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <output>
     204:	85 e0       	ldi	r24, 0x05	; 5
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	0e 94 c6 00 	call	0x18c	; 0x18c <wait_avr>
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	80 e3       	ldi	r24, 0x30	; 48
     210:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <output>
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	0e 94 c6 00 	call	0x18c	; 0x18c <wait_avr>
     21c:	60 e0       	ldi	r22, 0x00	; 0
     21e:	8c e3       	ldi	r24, 0x3C	; 60
     220:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	8c e0       	ldi	r24, 0x0C	; 12
     228:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     22c:	60 e0       	ldi	r22, 0x00	; 0
     22e:	86 e0       	ldi	r24, 0x06	; 6
     230:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     234:	60 e0       	ldi	r22, 0x00	; 0
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     23c:	08 95       	ret

0000023e <clr_lcd>:
     23e:	60 e0       	ldi	r22, 0x00	; 0
     240:	81 e0       	ldi	r24, 0x01	; 1
     242:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     246:	08 95       	ret

00000248 <pos_lcd>:
     248:	cf 93       	push	r28
     24a:	c6 2f       	mov	r28, r22
     24c:	98 e2       	ldi	r25, 0x28	; 40
     24e:	89 9f       	mul	r24, r25
     250:	c0 0d       	add	r28, r0
     252:	11 24       	eor	r1, r1
     254:	60 e0       	ldi	r22, 0x00	; 0
     256:	82 e0       	ldi	r24, 0x02	; 2
     258:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     25c:	cc 23       	and	r28, r28
     25e:	31 f0       	breq	.+12     	; 0x26c <pos_lcd+0x24>
     260:	60 e0       	ldi	r22, 0x00	; 0
     262:	84 e1       	ldi	r24, 0x14	; 20
     264:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>
     268:	c1 50       	subi	r28, 0x01	; 1
     26a:	d1 f7       	brne	.-12     	; 0x260 <pos_lcd+0x18>
     26c:	cf 91       	pop	r28
     26e:	08 95       	ret

00000270 <puts_lcd2>:

void
puts_lcd2(const char *s)
{
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
	char c;
	while ((c = *(s++)) != 0) {
     274:	ec 01       	movw	r28, r24
     276:	21 96       	adiw	r28, 0x01	; 1
     278:	fc 01       	movw	r30, r24
     27a:	80 81       	ld	r24, Z
     27c:	88 23       	and	r24, r24
     27e:	31 f0       	breq	.+12     	; 0x28c <puts_lcd2+0x1c>
		write(c, 1);
     280:	61 e0       	ldi	r22, 0x01	; 1
     282:	0e 94 e7 00 	call	0x1ce	; 0x1ce <write>

void
puts_lcd2(const char *s)
{
	char c;
	while ((c = *(s++)) != 0) {
     286:	89 91       	ld	r24, Y+
     288:	81 11       	cpse	r24, r1
     28a:	fa cf       	rjmp	.-12     	; 0x280 <puts_lcd2+0x10>
		write(c, 1);
	}
     28c:	df 91       	pop	r29
     28e:	cf 91       	pop	r28
     290:	08 95       	ret

00000292 <displayblank>:
	PORTB ^= 16;
	TCNT1 = 49911;  // 65,526 - 15,625, wait for 0.5 sec at 8 MHz
}*/

void displayblank(int r, int c, char* pos)
{
     292:	0f 93       	push	r16
     294:	1f 93       	push	r17
     296:	cf 93       	push	r28
     298:	df 93       	push	r29
     29a:	d8 2f       	mov	r29, r24
     29c:	c6 2f       	mov	r28, r22
     29e:	8a 01       	movw	r16, r20
	pos_lcd(r,c);
     2a0:	0e 94 24 01 	call	0x248	; 0x248 <pos_lcd>
	puts_lcd2(pos);
     2a4:	c8 01       	movw	r24, r16
     2a6:	0e 94 38 01 	call	0x270	; 0x270 <puts_lcd2>
	pos_lcd(r, c+2);
     2aa:	62 e0       	ldi	r22, 0x02	; 2
     2ac:	6c 0f       	add	r22, r28
     2ae:	8d 2f       	mov	r24, r29
     2b0:	0e 94 24 01 	call	0x248	; 0x248 <pos_lcd>
	puts_lcd2("-----");
     2b4:	84 e6       	ldi	r24, 0x64	; 100
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 38 01 	call	0x270	; 0x270 <puts_lcd2>
}
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	1f 91       	pop	r17
     2c2:	0f 91       	pop	r16
     2c4:	08 95       	ret

000002c6 <displayallblanks>:

void displayallblanks()
{
	clr_lcd();
     2c6:	0e 94 1f 01 	call	0x23e	; 0x23e <clr_lcd>
	displayblank(0, 0, "I ");
     2ca:	4a e6       	ldi	r20, 0x6A	; 106
     2cc:	50 e0       	ldi	r21, 0x00	; 0
     2ce:	60 e0       	ldi	r22, 0x00	; 0
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 49 01 	call	0x292	; 0x292 <displayblank>
	displayblank(0, 8, "m ");
     2da:	4d e6       	ldi	r20, 0x6D	; 109
     2dc:	50 e0       	ldi	r21, 0x00	; 0
     2de:	68 e0       	ldi	r22, 0x08	; 8
     2e0:	70 e0       	ldi	r23, 0x00	; 0
     2e2:	80 e0       	ldi	r24, 0x00	; 0
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 49 01 	call	0x292	; 0x292 <displayblank>
	displayblank(1, 0, "M ");
     2ea:	40 e7       	ldi	r20, 0x70	; 112
     2ec:	50 e0       	ldi	r21, 0x00	; 0
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	70 e0       	ldi	r23, 0x00	; 0
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 49 01 	call	0x292	; 0x292 <displayblank>
	displayblank(1, 8, "a ");
     2fa:	43 e7       	ldi	r20, 0x73	; 115
     2fc:	50 e0       	ldi	r21, 0x00	; 0
     2fe:	68 e0       	ldi	r22, 0x08	; 8
     300:	70 e0       	ldi	r23, 0x00	; 0
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	0e 94 49 01 	call	0x292	; 0x292 <displayblank>
     30a:	08 95       	ret

0000030c <display>:
}

void display(float x, int r, int c, char* pos)
{
     30c:	ef 92       	push	r14
     30e:	ff 92       	push	r15
     310:	0f 93       	push	r16
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	d4 2f       	mov	r29, r20
     31a:	c2 2f       	mov	r28, r18
     31c:	78 01       	movw	r14, r16
	dtostrf(x, 1, 3, voltageshow);
     31e:	00 e8       	ldi	r16, 0x80	; 128
     320:	10 e0       	ldi	r17, 0x00	; 0
     322:	23 e0       	ldi	r18, 0x03	; 3
     324:	41 e0       	ldi	r20, 0x01	; 1
     326:	0e 94 af 05 	call	0xb5e	; 0xb5e <dtostrf>
	//strcat(pos, voltageshow);
	pos_lcd(r,c);
     32a:	6c 2f       	mov	r22, r28
     32c:	8d 2f       	mov	r24, r29
     32e:	0e 94 24 01 	call	0x248	; 0x248 <pos_lcd>
	puts_lcd2(pos);
     332:	c7 01       	movw	r24, r14
     334:	0e 94 38 01 	call	0x270	; 0x270 <puts_lcd2>
	pos_lcd(r, c+2);
     338:	62 e0       	ldi	r22, 0x02	; 2
     33a:	6c 0f       	add	r22, r28
     33c:	8d 2f       	mov	r24, r29
     33e:	0e 94 24 01 	call	0x248	; 0x248 <pos_lcd>
	puts_lcd2(voltageshow);
     342:	c8 01       	movw	r24, r16
     344:	0e 94 38 01 	call	0x270	; 0x270 <puts_lcd2>
}
     348:	df 91       	pop	r29
     34a:	cf 91       	pop	r28
     34c:	1f 91       	pop	r17
     34e:	0f 91       	pop	r16
     350:	ff 90       	pop	r15
     352:	ef 90       	pop	r14
     354:	08 95       	ret

00000356 <displayall>:

void displayall()
{
     356:	0f 93       	push	r16
     358:	1f 93       	push	r17
	display(voltage, 0, 0, "I ");
     35a:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <voltage>
     35e:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <voltage+0x1>
     362:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <voltage+0x2>
     366:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <voltage+0x3>
     36a:	0a e6       	ldi	r16, 0x6A	; 106
     36c:	10 e0       	ldi	r17, 0x00	; 0
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	40 e0       	ldi	r20, 0x00	; 0
     374:	50 e0       	ldi	r21, 0x00	; 0
     376:	0e 94 86 01 	call	0x30c	; 0x30c <display>
	display(min, 0, 8, "m ");
     37a:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__data_start>
     37e:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__data_start+0x1>
     382:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_start+0x2>
     386:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__data_start+0x3>
     38a:	0d e6       	ldi	r16, 0x6D	; 109
     38c:	10 e0       	ldi	r17, 0x00	; 0
     38e:	28 e0       	ldi	r18, 0x08	; 8
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	50 e0       	ldi	r21, 0x00	; 0
     396:	0e 94 86 01 	call	0x30c	; 0x30c <display>
	display(max, 1, 0, "M ");
     39a:	60 91 7a 00 	lds	r22, 0x007A	; 0x80007a <max>
     39e:	70 91 7b 00 	lds	r23, 0x007B	; 0x80007b <max+0x1>
     3a2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <max+0x2>
     3a6:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <max+0x3>
     3aa:	00 e7       	ldi	r16, 0x70	; 112
     3ac:	10 e0       	ldi	r17, 0x00	; 0
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	41 e0       	ldi	r20, 0x01	; 1
     3b4:	50 e0       	ldi	r21, 0x00	; 0
     3b6:	0e 94 86 01 	call	0x30c	; 0x30c <display>
	display(avg, 1, 8, "a ");
     3ba:	60 91 88 00 	lds	r22, 0x0088	; 0x800088 <avg>
     3be:	70 91 89 00 	lds	r23, 0x0089	; 0x800089 <avg+0x1>
     3c2:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <avg+0x2>
     3c6:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <avg+0x3>
     3ca:	03 e7       	ldi	r16, 0x73	; 115
     3cc:	10 e0       	ldi	r17, 0x00	; 0
     3ce:	28 e0       	ldi	r18, 0x08	; 8
     3d0:	30 e0       	ldi	r19, 0x00	; 0
     3d2:	41 e0       	ldi	r20, 0x01	; 1
     3d4:	50 e0       	ldi	r21, 0x00	; 0
     3d6:	0e 94 86 01 	call	0x30c	; 0x30c <display>
}
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	08 95       	ret

000003e0 <__vector_16>:
char c = 40;
ISR (ADC_vect)    // Timer1 ISR
{
     3e0:	1f 92       	push	r1
     3e2:	0f 92       	push	r0
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	0f 92       	push	r0
     3e8:	11 24       	eor	r1, r1
     3ea:	6f 92       	push	r6
     3ec:	7f 92       	push	r7
     3ee:	8f 92       	push	r8
     3f0:	9f 92       	push	r9
     3f2:	af 92       	push	r10
     3f4:	bf 92       	push	r11
     3f6:	cf 92       	push	r12
     3f8:	df 92       	push	r13
     3fa:	ef 92       	push	r14
     3fc:	ff 92       	push	r15
     3fe:	0f 93       	push	r16
     400:	1f 93       	push	r17
     402:	2f 93       	push	r18
     404:	3f 93       	push	r19
     406:	4f 93       	push	r20
     408:	5f 93       	push	r21
     40a:	6f 93       	push	r22
     40c:	7f 93       	push	r23
     40e:	8f 93       	push	r24
     410:	9f 93       	push	r25
     412:	af 93       	push	r26
     414:	bf 93       	push	r27
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	ef 93       	push	r30
     41c:	ff 93       	push	r31
	clr_lcd();
     41e:	0e 94 1f 01 	call	0x23e	; 0x23e <clr_lcd>
	SET_BIT(TIFR, TOV1); // clear timer overflow vector flag 1
     422:	88 b7       	in	r24, 0x38	; 56
     424:	84 60       	ori	r24, 0x04	; 4
     426:	88 bf       	out	0x38, r24	; 56
	voltage = ADC/1023.0 * 5;
     428:	64 b1       	in	r22, 0x04	; 4
     42a:	75 b1       	in	r23, 0x05	; 5
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 8b 04 	call	0x916	; 0x916 <__floatunsisf>
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 ec       	ldi	r19, 0xC0	; 192
     438:	4f e7       	ldi	r20, 0x7F	; 127
     43a:	54 e4       	ldi	r21, 0x44	; 68
     43c:	0e 94 19 04 	call	0x832	; 0x832 <__divsf3>
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	40 ea       	ldi	r20, 0xA0	; 160
     446:	50 e4       	ldi	r21, 0x40	; 64
     448:	0e 94 42 05 	call	0xa84	; 0xa84 <__mulsf3>
     44c:	16 2f       	mov	r17, r22
     44e:	07 2f       	mov	r16, r23
     450:	b8 2e       	mov	r11, r24
     452:	a9 2e       	mov	r10, r25
     454:	86 2f       	mov	r24, r22
     456:	90 2f       	mov	r25, r16
     458:	ab 2d       	mov	r26, r11
     45a:	ba 2d       	mov	r27, r10
     45c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <voltage>
     460:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <voltage+0x1>
     464:	a0 93 86 00 	sts	0x0086, r26	; 0x800086 <voltage+0x2>
     468:	b0 93 87 00 	sts	0x0087, r27	; 0x800087 <voltage+0x3>
	n++;
     46c:	c0 91 7e 00 	lds	r28, 0x007E	; 0x80007e <n>
     470:	d0 91 7f 00 	lds	r29, 0x007F	; 0x80007f <n+0x1>
     474:	21 96       	adiw	r28, 0x01	; 1
     476:	d0 93 7f 00 	sts	0x007F, r29	; 0x80007f <n+0x1>
     47a:	c0 93 7e 00 	sts	0x007E, r28	; 0x80007e <n>
	total += voltage;
     47e:	20 91 76 00 	lds	r18, 0x0076	; 0x800076 <__data_end>
     482:	30 91 77 00 	lds	r19, 0x0077	; 0x800077 <__data_end+0x1>
     486:	40 91 78 00 	lds	r20, 0x0078	; 0x800078 <__data_end+0x2>
     48a:	50 91 79 00 	lds	r21, 0x0079	; 0x800079 <__data_end+0x3>
     48e:	61 2f       	mov	r22, r17
     490:	70 2f       	mov	r23, r16
     492:	8b 2d       	mov	r24, r11
     494:	9a 2d       	mov	r25, r10
     496:	0e 94 a8 03 	call	0x750	; 0x750 <__addsf3>
     49a:	6b 01       	movw	r12, r22
     49c:	7c 01       	movw	r14, r24
     49e:	60 93 76 00 	sts	0x0076, r22	; 0x800076 <__data_end>
     4a2:	70 93 77 00 	sts	0x0077, r23	; 0x800077 <__data_end+0x1>
     4a6:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__data_end+0x2>
     4aa:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__data_end+0x3>
	min = voltage > min ? min : voltage;
     4ae:	90 90 60 00 	lds	r9, 0x0060	; 0x800060 <__data_start>
     4b2:	80 90 61 00 	lds	r8, 0x0061	; 0x800061 <__data_start+0x1>
     4b6:	70 90 62 00 	lds	r7, 0x0062	; 0x800062 <__data_start+0x2>
     4ba:	60 90 63 00 	lds	r6, 0x0063	; 0x800063 <__data_start+0x3>
     4be:	29 2d       	mov	r18, r9
     4c0:	38 2d       	mov	r19, r8
     4c2:	47 2d       	mov	r20, r7
     4c4:	56 2d       	mov	r21, r6
     4c6:	61 2f       	mov	r22, r17
     4c8:	70 2f       	mov	r23, r16
     4ca:	8b 2d       	mov	r24, r11
     4cc:	9a 2d       	mov	r25, r10
     4ce:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__gesf2>
     4d2:	18 16       	cp	r1, r24
     4d4:	24 f0       	brlt	.+8      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     4d6:	91 2e       	mov	r9, r17
     4d8:	80 2e       	mov	r8, r16
     4da:	7b 2c       	mov	r7, r11
     4dc:	6a 2c       	mov	r6, r10
     4de:	89 2d       	mov	r24, r9
     4e0:	98 2d       	mov	r25, r8
     4e2:	a7 2d       	mov	r26, r7
     4e4:	b6 2d       	mov	r27, r6
     4e6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
     4ea:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
     4ee:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_start+0x2>
     4f2:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_start+0x3>
	max = voltage < max ? max : voltage;
     4f6:	90 90 7a 00 	lds	r9, 0x007A	; 0x80007a <max>
     4fa:	80 90 7b 00 	lds	r8, 0x007B	; 0x80007b <max+0x1>
     4fe:	70 90 7c 00 	lds	r7, 0x007C	; 0x80007c <max+0x2>
     502:	60 90 7d 00 	lds	r6, 0x007D	; 0x80007d <max+0x3>
     506:	29 2d       	mov	r18, r9
     508:	38 2d       	mov	r19, r8
     50a:	47 2d       	mov	r20, r7
     50c:	56 2d       	mov	r21, r6
     50e:	61 2f       	mov	r22, r17
     510:	70 2f       	mov	r23, r16
     512:	8b 2d       	mov	r24, r11
     514:	9a 2d       	mov	r25, r10
     516:	0e 94 14 04 	call	0x828	; 0x828 <__cmpsf2>
     51a:	88 23       	and	r24, r24
     51c:	24 f0       	brlt	.+8      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
     51e:	91 2e       	mov	r9, r17
     520:	80 2e       	mov	r8, r16
     522:	7b 2c       	mov	r7, r11
     524:	6a 2c       	mov	r6, r10
     526:	89 2d       	mov	r24, r9
     528:	98 2d       	mov	r25, r8
     52a:	a7 2d       	mov	r26, r7
     52c:	b6 2d       	mov	r27, r6
     52e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <max>
     532:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <max+0x1>
     536:	a0 93 7c 00 	sts	0x007C, r26	; 0x80007c <max+0x2>
     53a:	b0 93 7d 00 	sts	0x007D, r27	; 0x80007d <max+0x3>
	avg = total/n;
     53e:	be 01       	movw	r22, r28
     540:	dd 0f       	add	r29, r29
     542:	88 0b       	sbc	r24, r24
     544:	99 0b       	sbc	r25, r25
     546:	0e 94 8d 04 	call	0x91a	; 0x91a <__floatsisf>
     54a:	9b 01       	movw	r18, r22
     54c:	ac 01       	movw	r20, r24
     54e:	c7 01       	movw	r24, r14
     550:	b6 01       	movw	r22, r12
     552:	0e 94 19 04 	call	0x832	; 0x832 <__divsf3>
     556:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <avg>
     55a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <avg+0x1>
     55e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <avg+0x2>
     562:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <avg+0x3>
	displayall();
     566:	0e 94 ab 01 	call	0x356	; 0x356 <displayall>
	PORTB ^= 16;
     56a:	98 b3       	in	r25, 0x18	; 24
     56c:	80 e1       	ldi	r24, 0x10	; 16
     56e:	89 27       	eor	r24, r25
     570:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 49911;  // 65,526 - 15,625, wait for 0.5 sec at 8 MHz
     572:	87 ef       	ldi	r24, 0xF7	; 247
     574:	92 ec       	ldi	r25, 0xC2	; 194
     576:	9d bd       	out	0x2d, r25	; 45
     578:	8c bd       	out	0x2c, r24	; 44
}
     57a:	ff 91       	pop	r31
     57c:	ef 91       	pop	r30
     57e:	df 91       	pop	r29
     580:	cf 91       	pop	r28
     582:	bf 91       	pop	r27
     584:	af 91       	pop	r26
     586:	9f 91       	pop	r25
     588:	8f 91       	pop	r24
     58a:	7f 91       	pop	r23
     58c:	6f 91       	pop	r22
     58e:	5f 91       	pop	r21
     590:	4f 91       	pop	r20
     592:	3f 91       	pop	r19
     594:	2f 91       	pop	r18
     596:	1f 91       	pop	r17
     598:	0f 91       	pop	r16
     59a:	ff 90       	pop	r15
     59c:	ef 90       	pop	r14
     59e:	df 90       	pop	r13
     5a0:	cf 90       	pop	r12
     5a2:	bf 90       	pop	r11
     5a4:	af 90       	pop	r10
     5a6:	9f 90       	pop	r9
     5a8:	8f 90       	pop	r8
     5aa:	7f 90       	pop	r7
     5ac:	6f 90       	pop	r6
     5ae:	0f 90       	pop	r0
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	0f 90       	pop	r0
     5b4:	1f 90       	pop	r1
     5b6:	18 95       	reti

000005b8 <is_pressed>:
	}
}

int is_pressed(int r, int c)
{
	DDRC = 0;
     5b8:	14 ba       	out	0x14, r1	; 20
	PORTC = 0;
     5ba:	15 ba       	out	0x15, r1	; 21
	SET_BIT(PORTC, c+4);
     5bc:	95 b3       	in	r25, 0x15	; 21
     5be:	6c 5f       	subi	r22, 0xFC	; 252
     5c0:	7f 4f       	sbci	r23, 0xFF	; 255
     5c2:	21 e0       	ldi	r18, 0x01	; 1
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	a9 01       	movw	r20, r18
     5c8:	06 2e       	mov	r0, r22
     5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <is_pressed+0x18>
     5cc:	44 0f       	add	r20, r20
     5ce:	55 1f       	adc	r21, r21
     5d0:	0a 94       	dec	r0
     5d2:	e2 f7       	brpl	.-8      	; 0x5cc <is_pressed+0x14>
     5d4:	49 2b       	or	r20, r25
     5d6:	45 bb       	out	0x15, r20	; 21
	SET_BIT(DDRC, r);
     5d8:	94 b3       	in	r25, 0x14	; 20
     5da:	02 c0       	rjmp	.+4      	; 0x5e0 <is_pressed+0x28>
     5dc:	22 0f       	add	r18, r18
     5de:	33 1f       	adc	r19, r19
     5e0:	8a 95       	dec	r24
     5e2:	e2 f7       	brpl	.-8      	; 0x5dc <is_pressed+0x24>
     5e4:	92 2b       	or	r25, r18
     5e6:	94 bb       	out	0x14, r25	; 20
	CLR_BIT(PORTC, r);
     5e8:	85 b3       	in	r24, 0x15	; 21
     5ea:	20 95       	com	r18
     5ec:	28 23       	and	r18, r24
     5ee:	25 bb       	out	0x15, r18	; 21
	if (GET_BIT(PINC, c+4))
     5f0:	23 b3       	in	r18, 0x13	; 19
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	02 c0       	rjmp	.+4      	; 0x5fa <is_pressed+0x42>
     5f6:	35 95       	asr	r19
     5f8:	27 95       	ror	r18
     5fa:	6a 95       	dec	r22
     5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <is_pressed+0x3e>
     5fe:	81 e0       	ldi	r24, 0x01	; 1
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	20 ff       	sbrs	r18, 0
     604:	02 c0       	rjmp	.+4      	; 0x60a <is_pressed+0x52>
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
	else
	{
		return 1;
	}

}
     60a:	08 95       	ret

0000060c <get_key>:

int get_key()
{
     60c:	0f 93       	push	r16
     60e:	1f 93       	push	r17
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
	int r,c;
	for (r = 0; r < 4; ++r)
     614:	00 e0       	ldi	r16, 0x00	; 0
     616:	10 e0       	ldi	r17, 0x00	; 0
     618:	18 c0       	rjmp	.+48     	; 0x64a <get_key+0x3e>
	{
		for (c = 0; c < 4; ++c)
		{
			if (is_pressed(r,c))
     61a:	be 01       	movw	r22, r28
     61c:	c8 01       	movw	r24, r16
     61e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <is_pressed>
     622:	00 97       	sbiw	r24, 0x00	; 0
     624:	49 f0       	breq	.+18     	; 0x638 <get_key+0x2c>
			{
				return r*4 + c + 1;
     626:	00 0f       	add	r16, r16
     628:	11 1f       	adc	r17, r17
     62a:	00 0f       	add	r16, r16
     62c:	11 1f       	adc	r17, r17
     62e:	c0 0f       	add	r28, r16
     630:	d1 1f       	adc	r29, r17
     632:	ce 01       	movw	r24, r28
     634:	01 96       	adiw	r24, 0x01	; 1
     636:	0c c0       	rjmp	.+24     	; 0x650 <get_key+0x44>
int get_key()
{
	int r,c;
	for (r = 0; r < 4; ++r)
	{
		for (c = 0; c < 4; ++c)
     638:	21 96       	adiw	r28, 0x01	; 1
     63a:	c4 30       	cpi	r28, 0x04	; 4
     63c:	d1 05       	cpc	r29, r1
     63e:	69 f7       	brne	.-38     	; 0x61a <get_key+0xe>
}

int get_key()
{
	int r,c;
	for (r = 0; r < 4; ++r)
     640:	0f 5f       	subi	r16, 0xFF	; 255
     642:	1f 4f       	sbci	r17, 0xFF	; 255
     644:	04 30       	cpi	r16, 0x04	; 4
     646:	11 05       	cpc	r17, r1
     648:	19 f0       	breq	.+6      	; 0x650 <get_key+0x44>
	}

}

int get_key()
{
     64a:	c0 e0       	ldi	r28, 0x00	; 0
     64c:	d0 e0       	ldi	r29, 0x00	; 0
     64e:	e5 cf       	rjmp	.-54     	; 0x61a <get_key+0xe>
				return r*4 + c + 1;
			}
		}
	}
	return 0;
}
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
     658:	08 95       	ret

0000065a <b_get_key>:

int b_get_key()
{
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
	int k = get_key();
     65e:	0e 94 06 03 	call	0x60c	; 0x60c <get_key>
     662:	ec 01       	movw	r28, r24
	if (k == 0) return 0;
     664:	89 2b       	or	r24, r25
     666:	41 f0       	breq	.+16     	; 0x678 <b_get_key+0x1e>
	while (k == get_key());
     668:	0e 94 06 03 	call	0x60c	; 0x60c <get_key>
     66c:	c8 17       	cp	r28, r24
     66e:	d9 07       	cpc	r29, r25
     670:	d9 f3       	breq	.-10     	; 0x668 <b_get_key+0xe>
	return k;
     672:	8c 2f       	mov	r24, r28
     674:	9d 2f       	mov	r25, r29
     676:	02 c0       	rjmp	.+4      	; 0x67c <b_get_key+0x22>
}

int b_get_key()
{
	int k = get_key();
	if (k == 0) return 0;
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	90 e0       	ldi	r25, 0x00	; 0
	while (k == get_key());
	return k;
}
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <checkforinput>:

void checkforinput()
{
	int k = b_get_key();
     682:	0e 94 2d 03 	call	0x65a	; 0x65a <b_get_key>
	switch (k){
     686:	81 30       	cpi	r24, 0x01	; 1
     688:	91 05       	cpc	r25, r1
     68a:	19 f0       	breq	.+6      	; 0x692 <checkforinput+0x10>
     68c:	02 97       	sbiw	r24, 0x02	; 2
     68e:	d1 f1       	breq	.+116    	; 0x704 <checkforinput+0x82>
     690:	08 95       	ret
		case 1:
			min = 6;
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	a0 ec       	ldi	r26, 0xC0	; 192
     698:	b0 e4       	ldi	r27, 0x40	; 64
     69a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
     69e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
     6a2:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_start+0x2>
     6a6:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_start+0x3>
			max = 0;
     6aa:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <max>
     6ae:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <max+0x1>
     6b2:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <max+0x2>
     6b6:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <max+0x3>
			n = 0;
     6ba:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <n+0x1>
     6be:	10 92 7e 00 	sts	0x007E, r1	; 0x80007e <n>
			avg = 0;
     6c2:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <avg>
     6c6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <avg+0x1>
     6ca:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <avg+0x2>
     6ce:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <avg+0x3>
			total = 0;
     6d2:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
     6d6:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <__data_end+0x1>
     6da:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__data_end+0x2>
     6de:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__data_end+0x3>
			voltage = 0;
     6e2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <voltage>
     6e6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <voltage+0x1>
     6ea:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <voltage+0x2>
     6ee:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <voltage+0x3>
			CLR_BIT(SFIOR, ADTS1);
     6f2:	80 b7       	in	r24, 0x30	; 48
     6f4:	8f 7b       	andi	r24, 0xBF	; 191
     6f6:	80 bf       	out	0x30, r24	; 48
			CLR_BIT(SFIOR, ADTS2);	
     6f8:	80 b7       	in	r24, 0x30	; 48
     6fa:	8f 77       	andi	r24, 0x7F	; 127
     6fc:	80 bf       	out	0x30, r24	; 48
			displayallblanks();
     6fe:	0e 94 63 01 	call	0x2c6	; 0x2c6 <displayallblanks>
			break;
     702:	08 95       	ret
		case 2:
			SET_BIT(SFIOR, ADTS1);
     704:	80 b7       	in	r24, 0x30	; 48
     706:	80 64       	ori	r24, 0x40	; 64
     708:	80 bf       	out	0x30, r24	; 48
			SET_BIT(SFIOR, ADTS2);
     70a:	80 b7       	in	r24, 0x30	; 48
     70c:	80 68       	ori	r24, 0x80	; 128
     70e:	80 bf       	out	0x30, r24	; 48
     710:	08 95       	ret

00000712 <main>:
	PORTB ^= 16;
	TCNT1 = 49911;  // 65,526 - 15,625, wait for 0.5 sec at 8 MHz
}
int main()
{
	ini_lcd();
     712:	0e 94 f7 00 	call	0x1ee	; 0x1ee <ini_lcd>
	clr_lcd();
     716:	0e 94 1f 01 	call	0x23e	; 0x23e <clr_lcd>
	CLR_BIT(DDRA, 0);
     71a:	d0 98       	cbi	0x1a, 0	; 26
	
	SET_BIT(DDRB, 4);   
     71c:	bc 9a       	sbi	0x17, 4	; 23
	TCNT1 = 49911; 
     71e:	87 ef       	ldi	r24, 0xF7	; 247
     720:	92 ec       	ldi	r25, 0xC2	; 194
     722:	9d bd       	out	0x2d, r25	; 45
     724:	8c bd       	out	0x2c, r24	; 44
	TCCR1B = (1<<CS12);
     726:	84 e0       	ldi	r24, 0x04	; 4
     728:	8e bd       	out	0x2e, r24	; 46
	
	//TIMSK = (1 << TOIE1);   // Enable timer1 overflow interrupt(TOIE1)
	SET_BIT(SFIOR, ADTS1);
     72a:	80 b7       	in	r24, 0x30	; 48
     72c:	80 64       	ori	r24, 0x40	; 64
     72e:	80 bf       	out	0x30, r24	; 48
	SET_BIT(SFIOR, ADTS2);
     730:	80 b7       	in	r24, 0x30	; 48
     732:	80 68       	ori	r24, 0x80	; 128
     734:	80 bf       	out	0x30, r24	; 48
	sei();  // Enable global interrupts by setting global interrupt enable bit in SREG
     736:	78 94       	sei

	SET_BIT(ADCSRA, ADEN); //ADEN = 1
     738:	37 9a       	sbi	0x06, 7	; 6
	SET_BIT(ADCSRA, ADATE);
     73a:	35 9a       	sbi	0x06, 5	; 6
	SET_BIT(ADCSRA, ADIE);
     73c:	33 9a       	sbi	0x06, 3	; 6
	SET_BIT(ADCSRA, ADPS2);
     73e:	32 9a       	sbi	0x06, 2	; 6
	SET_BIT(ADCSRA, ADPS1);
     740:	31 9a       	sbi	0x06, 1	; 6
	SET_BIT(ADCSRA, ADPS0);
     742:	30 9a       	sbi	0x06, 0	; 6

	SET_BIT(ADMUX, REFS0);
     744:	3e 9a       	sbi	0x07, 6	; 7
	
	SET_BIT(ADCSRA, ADSC); //ADSC = 1
     746:	36 9a       	sbi	0x06, 6	; 6

	while(1)
	{
		checkforinput();
     748:	0e 94 41 03 	call	0x682	; 0x682 <checkforinput>
     74c:	fd cf       	rjmp	.-6      	; 0x748 <main+0x36>

0000074e <__subsf3>:
     74e:	50 58       	subi	r21, 0x80	; 128

00000750 <__addsf3>:
     750:	bb 27       	eor	r27, r27
     752:	aa 27       	eor	r26, r26
     754:	0e 94 bf 03 	call	0x77e	; 0x77e <__addsf3x>
     758:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__fp_round>
     75c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__fp_pscA>
     760:	38 f0       	brcs	.+14     	; 0x770 <__addsf3+0x20>
     762:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__fp_pscB>
     766:	20 f0       	brcs	.+8      	; 0x770 <__addsf3+0x20>
     768:	39 f4       	brne	.+14     	; 0x778 <__addsf3+0x28>
     76a:	9f 3f       	cpi	r25, 0xFF	; 255
     76c:	19 f4       	brne	.+6      	; 0x774 <__addsf3+0x24>
     76e:	26 f4       	brtc	.+8      	; 0x778 <__addsf3+0x28>
     770:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_nan>
     774:	0e f4       	brtc	.+2      	; 0x778 <__addsf3+0x28>
     776:	e0 95       	com	r30
     778:	e7 fb       	bst	r30, 7
     77a:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__fp_inf>

0000077e <__addsf3x>:
     77e:	e9 2f       	mov	r30, r25
     780:	0e 94 14 05 	call	0xa28	; 0xa28 <__fp_split3>
     784:	58 f3       	brcs	.-42     	; 0x75c <__addsf3+0xc>
     786:	ba 17       	cp	r27, r26
     788:	62 07       	cpc	r22, r18
     78a:	73 07       	cpc	r23, r19
     78c:	84 07       	cpc	r24, r20
     78e:	95 07       	cpc	r25, r21
     790:	20 f0       	brcs	.+8      	; 0x79a <__addsf3x+0x1c>
     792:	79 f4       	brne	.+30     	; 0x7b2 <__addsf3x+0x34>
     794:	a6 f5       	brtc	.+104    	; 0x7fe <__addsf3x+0x80>
     796:	0c 94 36 05 	jmp	0xa6c	; 0xa6c <__fp_zero>
     79a:	0e f4       	brtc	.+2      	; 0x79e <__addsf3x+0x20>
     79c:	e0 95       	com	r30
     79e:	0b 2e       	mov	r0, r27
     7a0:	ba 2f       	mov	r27, r26
     7a2:	a0 2d       	mov	r26, r0
     7a4:	0b 01       	movw	r0, r22
     7a6:	b9 01       	movw	r22, r18
     7a8:	90 01       	movw	r18, r0
     7aa:	0c 01       	movw	r0, r24
     7ac:	ca 01       	movw	r24, r20
     7ae:	a0 01       	movw	r20, r0
     7b0:	11 24       	eor	r1, r1
     7b2:	ff 27       	eor	r31, r31
     7b4:	59 1b       	sub	r21, r25
     7b6:	99 f0       	breq	.+38     	; 0x7de <__addsf3x+0x60>
     7b8:	59 3f       	cpi	r21, 0xF9	; 249
     7ba:	50 f4       	brcc	.+20     	; 0x7d0 <__addsf3x+0x52>
     7bc:	50 3e       	cpi	r21, 0xE0	; 224
     7be:	68 f1       	brcs	.+90     	; 0x81a <__addsf3x+0x9c>
     7c0:	1a 16       	cp	r1, r26
     7c2:	f0 40       	sbci	r31, 0x00	; 0
     7c4:	a2 2f       	mov	r26, r18
     7c6:	23 2f       	mov	r18, r19
     7c8:	34 2f       	mov	r19, r20
     7ca:	44 27       	eor	r20, r20
     7cc:	58 5f       	subi	r21, 0xF8	; 248
     7ce:	f3 cf       	rjmp	.-26     	; 0x7b6 <__addsf3x+0x38>
     7d0:	46 95       	lsr	r20
     7d2:	37 95       	ror	r19
     7d4:	27 95       	ror	r18
     7d6:	a7 95       	ror	r26
     7d8:	f0 40       	sbci	r31, 0x00	; 0
     7da:	53 95       	inc	r21
     7dc:	c9 f7       	brne	.-14     	; 0x7d0 <__addsf3x+0x52>
     7de:	7e f4       	brtc	.+30     	; 0x7fe <__addsf3x+0x80>
     7e0:	1f 16       	cp	r1, r31
     7e2:	ba 0b       	sbc	r27, r26
     7e4:	62 0b       	sbc	r22, r18
     7e6:	73 0b       	sbc	r23, r19
     7e8:	84 0b       	sbc	r24, r20
     7ea:	ba f0       	brmi	.+46     	; 0x81a <__addsf3x+0x9c>
     7ec:	91 50       	subi	r25, 0x01	; 1
     7ee:	a1 f0       	breq	.+40     	; 0x818 <__addsf3x+0x9a>
     7f0:	ff 0f       	add	r31, r31
     7f2:	bb 1f       	adc	r27, r27
     7f4:	66 1f       	adc	r22, r22
     7f6:	77 1f       	adc	r23, r23
     7f8:	88 1f       	adc	r24, r24
     7fa:	c2 f7       	brpl	.-16     	; 0x7ec <__addsf3x+0x6e>
     7fc:	0e c0       	rjmp	.+28     	; 0x81a <__addsf3x+0x9c>
     7fe:	ba 0f       	add	r27, r26
     800:	62 1f       	adc	r22, r18
     802:	73 1f       	adc	r23, r19
     804:	84 1f       	adc	r24, r20
     806:	48 f4       	brcc	.+18     	; 0x81a <__addsf3x+0x9c>
     808:	87 95       	ror	r24
     80a:	77 95       	ror	r23
     80c:	67 95       	ror	r22
     80e:	b7 95       	ror	r27
     810:	f7 95       	ror	r31
     812:	9e 3f       	cpi	r25, 0xFE	; 254
     814:	08 f0       	brcs	.+2      	; 0x818 <__addsf3x+0x9a>
     816:	b0 cf       	rjmp	.-160    	; 0x778 <__addsf3+0x28>
     818:	93 95       	inc	r25
     81a:	88 0f       	add	r24, r24
     81c:	08 f0       	brcs	.+2      	; 0x820 <__addsf3x+0xa2>
     81e:	99 27       	eor	r25, r25
     820:	ee 0f       	add	r30, r30
     822:	97 95       	ror	r25
     824:	87 95       	ror	r24
     826:	08 95       	ret

00000828 <__cmpsf2>:
     828:	0e 94 c8 04 	call	0x990	; 0x990 <__fp_cmp>
     82c:	08 f4       	brcc	.+2      	; 0x830 <__cmpsf2+0x8>
     82e:	81 e0       	ldi	r24, 0x01	; 1
     830:	08 95       	ret

00000832 <__divsf3>:
     832:	0e 94 2d 04 	call	0x85a	; 0x85a <__divsf3x>
     836:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__fp_round>
     83a:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__fp_pscB>
     83e:	58 f0       	brcs	.+22     	; 0x856 <__divsf3+0x24>
     840:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__fp_pscA>
     844:	40 f0       	brcs	.+16     	; 0x856 <__divsf3+0x24>
     846:	29 f4       	brne	.+10     	; 0x852 <__divsf3+0x20>
     848:	5f 3f       	cpi	r21, 0xFF	; 255
     84a:	29 f0       	breq	.+10     	; 0x856 <__divsf3+0x24>
     84c:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__fp_inf>
     850:	51 11       	cpse	r21, r1
     852:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_szero>
     856:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_nan>

0000085a <__divsf3x>:
     85a:	0e 94 14 05 	call	0xa28	; 0xa28 <__fp_split3>
     85e:	68 f3       	brcs	.-38     	; 0x83a <__divsf3+0x8>

00000860 <__divsf3_pse>:
     860:	99 23       	and	r25, r25
     862:	b1 f3       	breq	.-20     	; 0x850 <__divsf3+0x1e>
     864:	55 23       	and	r21, r21
     866:	91 f3       	breq	.-28     	; 0x84c <__divsf3+0x1a>
     868:	95 1b       	sub	r25, r21
     86a:	55 0b       	sbc	r21, r21
     86c:	bb 27       	eor	r27, r27
     86e:	aa 27       	eor	r26, r26
     870:	62 17       	cp	r22, r18
     872:	73 07       	cpc	r23, r19
     874:	84 07       	cpc	r24, r20
     876:	38 f0       	brcs	.+14     	; 0x886 <__divsf3_pse+0x26>
     878:	9f 5f       	subi	r25, 0xFF	; 255
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	22 0f       	add	r18, r18
     87e:	33 1f       	adc	r19, r19
     880:	44 1f       	adc	r20, r20
     882:	aa 1f       	adc	r26, r26
     884:	a9 f3       	breq	.-22     	; 0x870 <__divsf3_pse+0x10>
     886:	35 d0       	rcall	.+106    	; 0x8f2 <__divsf3_pse+0x92>
     888:	0e 2e       	mov	r0, r30
     88a:	3a f0       	brmi	.+14     	; 0x89a <__divsf3_pse+0x3a>
     88c:	e0 e8       	ldi	r30, 0x80	; 128
     88e:	32 d0       	rcall	.+100    	; 0x8f4 <__divsf3_pse+0x94>
     890:	91 50       	subi	r25, 0x01	; 1
     892:	50 40       	sbci	r21, 0x00	; 0
     894:	e6 95       	lsr	r30
     896:	00 1c       	adc	r0, r0
     898:	ca f7       	brpl	.-14     	; 0x88c <__divsf3_pse+0x2c>
     89a:	2b d0       	rcall	.+86     	; 0x8f2 <__divsf3_pse+0x92>
     89c:	fe 2f       	mov	r31, r30
     89e:	29 d0       	rcall	.+82     	; 0x8f2 <__divsf3_pse+0x92>
     8a0:	66 0f       	add	r22, r22
     8a2:	77 1f       	adc	r23, r23
     8a4:	88 1f       	adc	r24, r24
     8a6:	bb 1f       	adc	r27, r27
     8a8:	26 17       	cp	r18, r22
     8aa:	37 07       	cpc	r19, r23
     8ac:	48 07       	cpc	r20, r24
     8ae:	ab 07       	cpc	r26, r27
     8b0:	b0 e8       	ldi	r27, 0x80	; 128
     8b2:	09 f0       	breq	.+2      	; 0x8b6 <__divsf3_pse+0x56>
     8b4:	bb 0b       	sbc	r27, r27
     8b6:	80 2d       	mov	r24, r0
     8b8:	bf 01       	movw	r22, r30
     8ba:	ff 27       	eor	r31, r31
     8bc:	93 58       	subi	r25, 0x83	; 131
     8be:	5f 4f       	sbci	r21, 0xFF	; 255
     8c0:	3a f0       	brmi	.+14     	; 0x8d0 <__divsf3_pse+0x70>
     8c2:	9e 3f       	cpi	r25, 0xFE	; 254
     8c4:	51 05       	cpc	r21, r1
     8c6:	78 f0       	brcs	.+30     	; 0x8e6 <__divsf3_pse+0x86>
     8c8:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__fp_inf>
     8cc:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_szero>
     8d0:	5f 3f       	cpi	r21, 0xFF	; 255
     8d2:	e4 f3       	brlt	.-8      	; 0x8cc <__divsf3_pse+0x6c>
     8d4:	98 3e       	cpi	r25, 0xE8	; 232
     8d6:	d4 f3       	brlt	.-12     	; 0x8cc <__divsf3_pse+0x6c>
     8d8:	86 95       	lsr	r24
     8da:	77 95       	ror	r23
     8dc:	67 95       	ror	r22
     8de:	b7 95       	ror	r27
     8e0:	f7 95       	ror	r31
     8e2:	9f 5f       	subi	r25, 0xFF	; 255
     8e4:	c9 f7       	brne	.-14     	; 0x8d8 <__divsf3_pse+0x78>
     8e6:	88 0f       	add	r24, r24
     8e8:	91 1d       	adc	r25, r1
     8ea:	96 95       	lsr	r25
     8ec:	87 95       	ror	r24
     8ee:	97 f9       	bld	r25, 7
     8f0:	08 95       	ret
     8f2:	e1 e0       	ldi	r30, 0x01	; 1
     8f4:	66 0f       	add	r22, r22
     8f6:	77 1f       	adc	r23, r23
     8f8:	88 1f       	adc	r24, r24
     8fa:	bb 1f       	adc	r27, r27
     8fc:	62 17       	cp	r22, r18
     8fe:	73 07       	cpc	r23, r19
     900:	84 07       	cpc	r24, r20
     902:	ba 07       	cpc	r27, r26
     904:	20 f0       	brcs	.+8      	; 0x90e <__divsf3_pse+0xae>
     906:	62 1b       	sub	r22, r18
     908:	73 0b       	sbc	r23, r19
     90a:	84 0b       	sbc	r24, r20
     90c:	ba 0b       	sbc	r27, r26
     90e:	ee 1f       	adc	r30, r30
     910:	88 f7       	brcc	.-30     	; 0x8f4 <__divsf3_pse+0x94>
     912:	e0 95       	com	r30
     914:	08 95       	ret

00000916 <__floatunsisf>:
     916:	e8 94       	clt
     918:	09 c0       	rjmp	.+18     	; 0x92c <__floatsisf+0x12>

0000091a <__floatsisf>:
     91a:	97 fb       	bst	r25, 7
     91c:	3e f4       	brtc	.+14     	; 0x92c <__floatsisf+0x12>
     91e:	90 95       	com	r25
     920:	80 95       	com	r24
     922:	70 95       	com	r23
     924:	61 95       	neg	r22
     926:	7f 4f       	sbci	r23, 0xFF	; 255
     928:	8f 4f       	sbci	r24, 0xFF	; 255
     92a:	9f 4f       	sbci	r25, 0xFF	; 255
     92c:	99 23       	and	r25, r25
     92e:	a9 f0       	breq	.+42     	; 0x95a <__floatsisf+0x40>
     930:	f9 2f       	mov	r31, r25
     932:	96 e9       	ldi	r25, 0x96	; 150
     934:	bb 27       	eor	r27, r27
     936:	93 95       	inc	r25
     938:	f6 95       	lsr	r31
     93a:	87 95       	ror	r24
     93c:	77 95       	ror	r23
     93e:	67 95       	ror	r22
     940:	b7 95       	ror	r27
     942:	f1 11       	cpse	r31, r1
     944:	f8 cf       	rjmp	.-16     	; 0x936 <__floatsisf+0x1c>
     946:	fa f4       	brpl	.+62     	; 0x986 <__floatsisf+0x6c>
     948:	bb 0f       	add	r27, r27
     94a:	11 f4       	brne	.+4      	; 0x950 <__floatsisf+0x36>
     94c:	60 ff       	sbrs	r22, 0
     94e:	1b c0       	rjmp	.+54     	; 0x986 <__floatsisf+0x6c>
     950:	6f 5f       	subi	r22, 0xFF	; 255
     952:	7f 4f       	sbci	r23, 0xFF	; 255
     954:	8f 4f       	sbci	r24, 0xFF	; 255
     956:	9f 4f       	sbci	r25, 0xFF	; 255
     958:	16 c0       	rjmp	.+44     	; 0x986 <__floatsisf+0x6c>
     95a:	88 23       	and	r24, r24
     95c:	11 f0       	breq	.+4      	; 0x962 <__floatsisf+0x48>
     95e:	96 e9       	ldi	r25, 0x96	; 150
     960:	11 c0       	rjmp	.+34     	; 0x984 <__floatsisf+0x6a>
     962:	77 23       	and	r23, r23
     964:	21 f0       	breq	.+8      	; 0x96e <__floatsisf+0x54>
     966:	9e e8       	ldi	r25, 0x8E	; 142
     968:	87 2f       	mov	r24, r23
     96a:	76 2f       	mov	r23, r22
     96c:	05 c0       	rjmp	.+10     	; 0x978 <__floatsisf+0x5e>
     96e:	66 23       	and	r22, r22
     970:	71 f0       	breq	.+28     	; 0x98e <__floatsisf+0x74>
     972:	96 e8       	ldi	r25, 0x86	; 134
     974:	86 2f       	mov	r24, r22
     976:	70 e0       	ldi	r23, 0x00	; 0
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	2a f0       	brmi	.+10     	; 0x986 <__floatsisf+0x6c>
     97c:	9a 95       	dec	r25
     97e:	66 0f       	add	r22, r22
     980:	77 1f       	adc	r23, r23
     982:	88 1f       	adc	r24, r24
     984:	da f7       	brpl	.-10     	; 0x97c <__floatsisf+0x62>
     986:	88 0f       	add	r24, r24
     988:	96 95       	lsr	r25
     98a:	87 95       	ror	r24
     98c:	97 f9       	bld	r25, 7
     98e:	08 95       	ret

00000990 <__fp_cmp>:
     990:	99 0f       	add	r25, r25
     992:	00 08       	sbc	r0, r0
     994:	55 0f       	add	r21, r21
     996:	aa 0b       	sbc	r26, r26
     998:	e0 e8       	ldi	r30, 0x80	; 128
     99a:	fe ef       	ldi	r31, 0xFE	; 254
     99c:	16 16       	cp	r1, r22
     99e:	17 06       	cpc	r1, r23
     9a0:	e8 07       	cpc	r30, r24
     9a2:	f9 07       	cpc	r31, r25
     9a4:	c0 f0       	brcs	.+48     	; 0x9d6 <__fp_cmp+0x46>
     9a6:	12 16       	cp	r1, r18
     9a8:	13 06       	cpc	r1, r19
     9aa:	e4 07       	cpc	r30, r20
     9ac:	f5 07       	cpc	r31, r21
     9ae:	98 f0       	brcs	.+38     	; 0x9d6 <__fp_cmp+0x46>
     9b0:	62 1b       	sub	r22, r18
     9b2:	73 0b       	sbc	r23, r19
     9b4:	84 0b       	sbc	r24, r20
     9b6:	95 0b       	sbc	r25, r21
     9b8:	39 f4       	brne	.+14     	; 0x9c8 <__fp_cmp+0x38>
     9ba:	0a 26       	eor	r0, r26
     9bc:	61 f0       	breq	.+24     	; 0x9d6 <__fp_cmp+0x46>
     9be:	23 2b       	or	r18, r19
     9c0:	24 2b       	or	r18, r20
     9c2:	25 2b       	or	r18, r21
     9c4:	21 f4       	brne	.+8      	; 0x9ce <__fp_cmp+0x3e>
     9c6:	08 95       	ret
     9c8:	0a 26       	eor	r0, r26
     9ca:	09 f4       	brne	.+2      	; 0x9ce <__fp_cmp+0x3e>
     9cc:	a1 40       	sbci	r26, 0x01	; 1
     9ce:	a6 95       	lsr	r26
     9d0:	8f ef       	ldi	r24, 0xFF	; 255
     9d2:	81 1d       	adc	r24, r1
     9d4:	81 1d       	adc	r24, r1
     9d6:	08 95       	ret

000009d8 <__fp_inf>:
     9d8:	97 f9       	bld	r25, 7
     9da:	9f 67       	ori	r25, 0x7F	; 127
     9dc:	80 e8       	ldi	r24, 0x80	; 128
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	60 e0       	ldi	r22, 0x00	; 0
     9e2:	08 95       	ret

000009e4 <__fp_nan>:
     9e4:	9f ef       	ldi	r25, 0xFF	; 255
     9e6:	80 ec       	ldi	r24, 0xC0	; 192
     9e8:	08 95       	ret

000009ea <__fp_pscA>:
     9ea:	00 24       	eor	r0, r0
     9ec:	0a 94       	dec	r0
     9ee:	16 16       	cp	r1, r22
     9f0:	17 06       	cpc	r1, r23
     9f2:	18 06       	cpc	r1, r24
     9f4:	09 06       	cpc	r0, r25
     9f6:	08 95       	ret

000009f8 <__fp_pscB>:
     9f8:	00 24       	eor	r0, r0
     9fa:	0a 94       	dec	r0
     9fc:	12 16       	cp	r1, r18
     9fe:	13 06       	cpc	r1, r19
     a00:	14 06       	cpc	r1, r20
     a02:	05 06       	cpc	r0, r21
     a04:	08 95       	ret

00000a06 <__fp_round>:
     a06:	09 2e       	mov	r0, r25
     a08:	03 94       	inc	r0
     a0a:	00 0c       	add	r0, r0
     a0c:	11 f4       	brne	.+4      	; 0xa12 <__fp_round+0xc>
     a0e:	88 23       	and	r24, r24
     a10:	52 f0       	brmi	.+20     	; 0xa26 <__fp_round+0x20>
     a12:	bb 0f       	add	r27, r27
     a14:	40 f4       	brcc	.+16     	; 0xa26 <__fp_round+0x20>
     a16:	bf 2b       	or	r27, r31
     a18:	11 f4       	brne	.+4      	; 0xa1e <__fp_round+0x18>
     a1a:	60 ff       	sbrs	r22, 0
     a1c:	04 c0       	rjmp	.+8      	; 0xa26 <__fp_round+0x20>
     a1e:	6f 5f       	subi	r22, 0xFF	; 255
     a20:	7f 4f       	sbci	r23, 0xFF	; 255
     a22:	8f 4f       	sbci	r24, 0xFF	; 255
     a24:	9f 4f       	sbci	r25, 0xFF	; 255
     a26:	08 95       	ret

00000a28 <__fp_split3>:
     a28:	57 fd       	sbrc	r21, 7
     a2a:	90 58       	subi	r25, 0x80	; 128
     a2c:	44 0f       	add	r20, r20
     a2e:	55 1f       	adc	r21, r21
     a30:	59 f0       	breq	.+22     	; 0xa48 <__fp_splitA+0x10>
     a32:	5f 3f       	cpi	r21, 0xFF	; 255
     a34:	71 f0       	breq	.+28     	; 0xa52 <__fp_splitA+0x1a>
     a36:	47 95       	ror	r20

00000a38 <__fp_splitA>:
     a38:	88 0f       	add	r24, r24
     a3a:	97 fb       	bst	r25, 7
     a3c:	99 1f       	adc	r25, r25
     a3e:	61 f0       	breq	.+24     	; 0xa58 <__fp_splitA+0x20>
     a40:	9f 3f       	cpi	r25, 0xFF	; 255
     a42:	79 f0       	breq	.+30     	; 0xa62 <__fp_splitA+0x2a>
     a44:	87 95       	ror	r24
     a46:	08 95       	ret
     a48:	12 16       	cp	r1, r18
     a4a:	13 06       	cpc	r1, r19
     a4c:	14 06       	cpc	r1, r20
     a4e:	55 1f       	adc	r21, r21
     a50:	f2 cf       	rjmp	.-28     	; 0xa36 <__fp_split3+0xe>
     a52:	46 95       	lsr	r20
     a54:	f1 df       	rcall	.-30     	; 0xa38 <__fp_splitA>
     a56:	08 c0       	rjmp	.+16     	; 0xa68 <__fp_splitA+0x30>
     a58:	16 16       	cp	r1, r22
     a5a:	17 06       	cpc	r1, r23
     a5c:	18 06       	cpc	r1, r24
     a5e:	99 1f       	adc	r25, r25
     a60:	f1 cf       	rjmp	.-30     	; 0xa44 <__fp_splitA+0xc>
     a62:	86 95       	lsr	r24
     a64:	71 05       	cpc	r23, r1
     a66:	61 05       	cpc	r22, r1
     a68:	08 94       	sec
     a6a:	08 95       	ret

00000a6c <__fp_zero>:
     a6c:	e8 94       	clt

00000a6e <__fp_szero>:
     a6e:	bb 27       	eor	r27, r27
     a70:	66 27       	eor	r22, r22
     a72:	77 27       	eor	r23, r23
     a74:	cb 01       	movw	r24, r22
     a76:	97 f9       	bld	r25, 7
     a78:	08 95       	ret

00000a7a <__gesf2>:
     a7a:	0e 94 c8 04 	call	0x990	; 0x990 <__fp_cmp>
     a7e:	08 f4       	brcc	.+2      	; 0xa82 <__gesf2+0x8>
     a80:	8f ef       	ldi	r24, 0xFF	; 255
     a82:	08 95       	ret

00000a84 <__mulsf3>:
     a84:	0e 94 55 05 	call	0xaaa	; 0xaaa <__mulsf3x>
     a88:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__fp_round>
     a8c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <__fp_pscA>
     a90:	38 f0       	brcs	.+14     	; 0xaa0 <__mulsf3+0x1c>
     a92:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <__fp_pscB>
     a96:	20 f0       	brcs	.+8      	; 0xaa0 <__mulsf3+0x1c>
     a98:	95 23       	and	r25, r21
     a9a:	11 f0       	breq	.+4      	; 0xaa0 <__mulsf3+0x1c>
     a9c:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__fp_inf>
     aa0:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_nan>
     aa4:	11 24       	eor	r1, r1
     aa6:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_szero>

00000aaa <__mulsf3x>:
     aaa:	0e 94 14 05 	call	0xa28	; 0xa28 <__fp_split3>
     aae:	70 f3       	brcs	.-36     	; 0xa8c <__mulsf3+0x8>

00000ab0 <__mulsf3_pse>:
     ab0:	95 9f       	mul	r25, r21
     ab2:	c1 f3       	breq	.-16     	; 0xaa4 <__mulsf3+0x20>
     ab4:	95 0f       	add	r25, r21
     ab6:	50 e0       	ldi	r21, 0x00	; 0
     ab8:	55 1f       	adc	r21, r21
     aba:	62 9f       	mul	r22, r18
     abc:	f0 01       	movw	r30, r0
     abe:	72 9f       	mul	r23, r18
     ac0:	bb 27       	eor	r27, r27
     ac2:	f0 0d       	add	r31, r0
     ac4:	b1 1d       	adc	r27, r1
     ac6:	63 9f       	mul	r22, r19
     ac8:	aa 27       	eor	r26, r26
     aca:	f0 0d       	add	r31, r0
     acc:	b1 1d       	adc	r27, r1
     ace:	aa 1f       	adc	r26, r26
     ad0:	64 9f       	mul	r22, r20
     ad2:	66 27       	eor	r22, r22
     ad4:	b0 0d       	add	r27, r0
     ad6:	a1 1d       	adc	r26, r1
     ad8:	66 1f       	adc	r22, r22
     ada:	82 9f       	mul	r24, r18
     adc:	22 27       	eor	r18, r18
     ade:	b0 0d       	add	r27, r0
     ae0:	a1 1d       	adc	r26, r1
     ae2:	62 1f       	adc	r22, r18
     ae4:	73 9f       	mul	r23, r19
     ae6:	b0 0d       	add	r27, r0
     ae8:	a1 1d       	adc	r26, r1
     aea:	62 1f       	adc	r22, r18
     aec:	83 9f       	mul	r24, r19
     aee:	a0 0d       	add	r26, r0
     af0:	61 1d       	adc	r22, r1
     af2:	22 1f       	adc	r18, r18
     af4:	74 9f       	mul	r23, r20
     af6:	33 27       	eor	r19, r19
     af8:	a0 0d       	add	r26, r0
     afa:	61 1d       	adc	r22, r1
     afc:	23 1f       	adc	r18, r19
     afe:	84 9f       	mul	r24, r20
     b00:	60 0d       	add	r22, r0
     b02:	21 1d       	adc	r18, r1
     b04:	82 2f       	mov	r24, r18
     b06:	76 2f       	mov	r23, r22
     b08:	6a 2f       	mov	r22, r26
     b0a:	11 24       	eor	r1, r1
     b0c:	9f 57       	subi	r25, 0x7F	; 127
     b0e:	50 40       	sbci	r21, 0x00	; 0
     b10:	9a f0       	brmi	.+38     	; 0xb38 <__mulsf3_pse+0x88>
     b12:	f1 f0       	breq	.+60     	; 0xb50 <__mulsf3_pse+0xa0>
     b14:	88 23       	and	r24, r24
     b16:	4a f0       	brmi	.+18     	; 0xb2a <__mulsf3_pse+0x7a>
     b18:	ee 0f       	add	r30, r30
     b1a:	ff 1f       	adc	r31, r31
     b1c:	bb 1f       	adc	r27, r27
     b1e:	66 1f       	adc	r22, r22
     b20:	77 1f       	adc	r23, r23
     b22:	88 1f       	adc	r24, r24
     b24:	91 50       	subi	r25, 0x01	; 1
     b26:	50 40       	sbci	r21, 0x00	; 0
     b28:	a9 f7       	brne	.-22     	; 0xb14 <__mulsf3_pse+0x64>
     b2a:	9e 3f       	cpi	r25, 0xFE	; 254
     b2c:	51 05       	cpc	r21, r1
     b2e:	80 f0       	brcs	.+32     	; 0xb50 <__mulsf3_pse+0xa0>
     b30:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__fp_inf>
     b34:	0c 94 37 05 	jmp	0xa6e	; 0xa6e <__fp_szero>
     b38:	5f 3f       	cpi	r21, 0xFF	; 255
     b3a:	e4 f3       	brlt	.-8      	; 0xb34 <__mulsf3_pse+0x84>
     b3c:	98 3e       	cpi	r25, 0xE8	; 232
     b3e:	d4 f3       	brlt	.-12     	; 0xb34 <__mulsf3_pse+0x84>
     b40:	86 95       	lsr	r24
     b42:	77 95       	ror	r23
     b44:	67 95       	ror	r22
     b46:	b7 95       	ror	r27
     b48:	f7 95       	ror	r31
     b4a:	e7 95       	ror	r30
     b4c:	9f 5f       	subi	r25, 0xFF	; 255
     b4e:	c1 f7       	brne	.-16     	; 0xb40 <__mulsf3_pse+0x90>
     b50:	fe 2b       	or	r31, r30
     b52:	88 0f       	add	r24, r24
     b54:	91 1d       	adc	r25, r1
     b56:	96 95       	lsr	r25
     b58:	87 95       	ror	r24
     b5a:	97 f9       	bld	r25, 7
     b5c:	08 95       	ret

00000b5e <dtostrf>:
     b5e:	ef 92       	push	r14
     b60:	0f 93       	push	r16
     b62:	1f 93       	push	r17
     b64:	cf 93       	push	r28
     b66:	df 93       	push	r29
     b68:	e8 01       	movw	r28, r16
     b6a:	47 fd       	sbrc	r20, 7
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <dtostrf+0x14>
     b6e:	34 e0       	ldi	r19, 0x04	; 4
     b70:	01 c0       	rjmp	.+2      	; 0xb74 <dtostrf+0x16>
     b72:	34 e1       	ldi	r19, 0x14	; 20
     b74:	04 2e       	mov	r0, r20
     b76:	00 0c       	add	r0, r0
     b78:	55 0b       	sbc	r21, r21
     b7a:	57 ff       	sbrs	r21, 7
     b7c:	03 c0       	rjmp	.+6      	; 0xb84 <dtostrf+0x26>
     b7e:	51 95       	neg	r21
     b80:	41 95       	neg	r20
     b82:	51 09       	sbc	r21, r1
     b84:	e3 2e       	mov	r14, r19
     b86:	02 2f       	mov	r16, r18
     b88:	24 2f       	mov	r18, r20
     b8a:	ae 01       	movw	r20, r28
     b8c:	0e 94 cf 05 	call	0xb9e	; 0xb9e <dtoa_prf>
     b90:	ce 01       	movw	r24, r28
     b92:	df 91       	pop	r29
     b94:	cf 91       	pop	r28
     b96:	1f 91       	pop	r17
     b98:	0f 91       	pop	r16
     b9a:	ef 90       	pop	r14
     b9c:	08 95       	ret

00000b9e <dtoa_prf>:
     b9e:	a9 e0       	ldi	r26, 0x09	; 9
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	e5 ed       	ldi	r30, 0xD5	; 213
     ba4:	f5 e0       	ldi	r31, 0x05	; 5
     ba6:	0c 94 07 08 	jmp	0x100e	; 0x100e <__prologue_saves__+0xc>
     baa:	6a 01       	movw	r12, r20
     bac:	12 2f       	mov	r17, r18
     bae:	b0 2e       	mov	r11, r16
     bb0:	2b e3       	ldi	r18, 0x3B	; 59
     bb2:	20 17       	cp	r18, r16
     bb4:	20 f0       	brcs	.+8      	; 0xbbe <dtoa_prf+0x20>
     bb6:	ff 24       	eor	r15, r15
     bb8:	f3 94       	inc	r15
     bba:	f0 0e       	add	r15, r16
     bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <dtoa_prf+0x24>
     bbe:	2c e3       	ldi	r18, 0x3C	; 60
     bc0:	f2 2e       	mov	r15, r18
     bc2:	0f 2d       	mov	r16, r15
     bc4:	27 e0       	ldi	r18, 0x07	; 7
     bc6:	ae 01       	movw	r20, r28
     bc8:	4f 5f       	subi	r20, 0xFF	; 255
     bca:	5f 4f       	sbci	r21, 0xFF	; 255
     bcc:	0e 94 29 07 	call	0xe52	; 0xe52 <__ftoa_engine>
     bd0:	bc 01       	movw	r22, r24
     bd2:	49 81       	ldd	r20, Y+1	; 0x01
     bd4:	84 2f       	mov	r24, r20
     bd6:	89 70       	andi	r24, 0x09	; 9
     bd8:	81 30       	cpi	r24, 0x01	; 1
     bda:	31 f0       	breq	.+12     	; 0xbe8 <dtoa_prf+0x4a>
     bdc:	e1 fc       	sbrc	r14, 1
     bde:	06 c0       	rjmp	.+12     	; 0xbec <dtoa_prf+0x4e>
     be0:	e0 fe       	sbrs	r14, 0
     be2:	06 c0       	rjmp	.+12     	; 0xbf0 <dtoa_prf+0x52>
     be4:	90 e2       	ldi	r25, 0x20	; 32
     be6:	05 c0       	rjmp	.+10     	; 0xbf2 <dtoa_prf+0x54>
     be8:	9d e2       	ldi	r25, 0x2D	; 45
     bea:	03 c0       	rjmp	.+6      	; 0xbf2 <dtoa_prf+0x54>
     bec:	9b e2       	ldi	r25, 0x2B	; 43
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <dtoa_prf+0x54>
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	5e 2d       	mov	r21, r14
     bf4:	50 71       	andi	r21, 0x10	; 16
     bf6:	43 ff       	sbrs	r20, 3
     bf8:	3c c0       	rjmp	.+120    	; 0xc72 <dtoa_prf+0xd4>
     bfa:	91 11       	cpse	r25, r1
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <dtoa_prf+0x64>
     bfe:	83 e0       	ldi	r24, 0x03	; 3
     c00:	01 c0       	rjmp	.+2      	; 0xc04 <dtoa_prf+0x66>
     c02:	84 e0       	ldi	r24, 0x04	; 4
     c04:	81 17       	cp	r24, r17
     c06:	18 f4       	brcc	.+6      	; 0xc0e <dtoa_prf+0x70>
     c08:	21 2f       	mov	r18, r17
     c0a:	28 1b       	sub	r18, r24
     c0c:	01 c0       	rjmp	.+2      	; 0xc10 <dtoa_prf+0x72>
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	51 11       	cpse	r21, r1
     c12:	0b c0       	rjmp	.+22     	; 0xc2a <dtoa_prf+0x8c>
     c14:	f6 01       	movw	r30, r12
     c16:	82 2f       	mov	r24, r18
     c18:	30 e2       	ldi	r19, 0x20	; 32
     c1a:	88 23       	and	r24, r24
     c1c:	19 f0       	breq	.+6      	; 0xc24 <dtoa_prf+0x86>
     c1e:	31 93       	st	Z+, r19
     c20:	81 50       	subi	r24, 0x01	; 1
     c22:	fb cf       	rjmp	.-10     	; 0xc1a <dtoa_prf+0x7c>
     c24:	c2 0e       	add	r12, r18
     c26:	d1 1c       	adc	r13, r1
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	99 23       	and	r25, r25
     c2c:	29 f0       	breq	.+10     	; 0xc38 <dtoa_prf+0x9a>
     c2e:	d6 01       	movw	r26, r12
     c30:	9c 93       	st	X, r25
     c32:	f6 01       	movw	r30, r12
     c34:	31 96       	adiw	r30, 0x01	; 1
     c36:	6f 01       	movw	r12, r30
     c38:	c6 01       	movw	r24, r12
     c3a:	03 96       	adiw	r24, 0x03	; 3
     c3c:	e2 fe       	sbrs	r14, 2
     c3e:	0a c0       	rjmp	.+20     	; 0xc54 <dtoa_prf+0xb6>
     c40:	3e e4       	ldi	r19, 0x4E	; 78
     c42:	d6 01       	movw	r26, r12
     c44:	3c 93       	st	X, r19
     c46:	41 e4       	ldi	r20, 0x41	; 65
     c48:	11 96       	adiw	r26, 0x01	; 1
     c4a:	4c 93       	st	X, r20
     c4c:	11 97       	sbiw	r26, 0x01	; 1
     c4e:	12 96       	adiw	r26, 0x02	; 2
     c50:	3c 93       	st	X, r19
     c52:	06 c0       	rjmp	.+12     	; 0xc60 <dtoa_prf+0xc2>
     c54:	3e e6       	ldi	r19, 0x6E	; 110
     c56:	f6 01       	movw	r30, r12
     c58:	30 83       	st	Z, r19
     c5a:	41 e6       	ldi	r20, 0x61	; 97
     c5c:	41 83       	std	Z+1, r20	; 0x01
     c5e:	32 83       	std	Z+2, r19	; 0x02
     c60:	fc 01       	movw	r30, r24
     c62:	32 2f       	mov	r19, r18
     c64:	40 e2       	ldi	r20, 0x20	; 32
     c66:	33 23       	and	r19, r19
     c68:	09 f4       	brne	.+2      	; 0xc6c <dtoa_prf+0xce>
     c6a:	42 c0       	rjmp	.+132    	; 0xcf0 <dtoa_prf+0x152>
     c6c:	41 93       	st	Z+, r20
     c6e:	31 50       	subi	r19, 0x01	; 1
     c70:	fa cf       	rjmp	.-12     	; 0xc66 <dtoa_prf+0xc8>
     c72:	42 ff       	sbrs	r20, 2
     c74:	44 c0       	rjmp	.+136    	; 0xcfe <dtoa_prf+0x160>
     c76:	91 11       	cpse	r25, r1
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <dtoa_prf+0xe0>
     c7a:	83 e0       	ldi	r24, 0x03	; 3
     c7c:	01 c0       	rjmp	.+2      	; 0xc80 <dtoa_prf+0xe2>
     c7e:	84 e0       	ldi	r24, 0x04	; 4
     c80:	81 17       	cp	r24, r17
     c82:	18 f4       	brcc	.+6      	; 0xc8a <dtoa_prf+0xec>
     c84:	21 2f       	mov	r18, r17
     c86:	28 1b       	sub	r18, r24
     c88:	01 c0       	rjmp	.+2      	; 0xc8c <dtoa_prf+0xee>
     c8a:	20 e0       	ldi	r18, 0x00	; 0
     c8c:	51 11       	cpse	r21, r1
     c8e:	0b c0       	rjmp	.+22     	; 0xca6 <dtoa_prf+0x108>
     c90:	f6 01       	movw	r30, r12
     c92:	82 2f       	mov	r24, r18
     c94:	30 e2       	ldi	r19, 0x20	; 32
     c96:	88 23       	and	r24, r24
     c98:	19 f0       	breq	.+6      	; 0xca0 <dtoa_prf+0x102>
     c9a:	31 93       	st	Z+, r19
     c9c:	81 50       	subi	r24, 0x01	; 1
     c9e:	fb cf       	rjmp	.-10     	; 0xc96 <dtoa_prf+0xf8>
     ca0:	c2 0e       	add	r12, r18
     ca2:	d1 1c       	adc	r13, r1
     ca4:	20 e0       	ldi	r18, 0x00	; 0
     ca6:	99 23       	and	r25, r25
     ca8:	29 f0       	breq	.+10     	; 0xcb4 <dtoa_prf+0x116>
     caa:	d6 01       	movw	r26, r12
     cac:	9c 93       	st	X, r25
     cae:	f6 01       	movw	r30, r12
     cb0:	31 96       	adiw	r30, 0x01	; 1
     cb2:	6f 01       	movw	r12, r30
     cb4:	c6 01       	movw	r24, r12
     cb6:	03 96       	adiw	r24, 0x03	; 3
     cb8:	e2 fe       	sbrs	r14, 2
     cba:	0b c0       	rjmp	.+22     	; 0xcd2 <dtoa_prf+0x134>
     cbc:	39 e4       	ldi	r19, 0x49	; 73
     cbe:	d6 01       	movw	r26, r12
     cc0:	3c 93       	st	X, r19
     cc2:	3e e4       	ldi	r19, 0x4E	; 78
     cc4:	11 96       	adiw	r26, 0x01	; 1
     cc6:	3c 93       	st	X, r19
     cc8:	11 97       	sbiw	r26, 0x01	; 1
     cca:	36 e4       	ldi	r19, 0x46	; 70
     ccc:	12 96       	adiw	r26, 0x02	; 2
     cce:	3c 93       	st	X, r19
     cd0:	07 c0       	rjmp	.+14     	; 0xce0 <dtoa_prf+0x142>
     cd2:	39 e6       	ldi	r19, 0x69	; 105
     cd4:	f6 01       	movw	r30, r12
     cd6:	30 83       	st	Z, r19
     cd8:	3e e6       	ldi	r19, 0x6E	; 110
     cda:	31 83       	std	Z+1, r19	; 0x01
     cdc:	36 e6       	ldi	r19, 0x66	; 102
     cde:	32 83       	std	Z+2, r19	; 0x02
     ce0:	fc 01       	movw	r30, r24
     ce2:	32 2f       	mov	r19, r18
     ce4:	40 e2       	ldi	r20, 0x20	; 32
     ce6:	33 23       	and	r19, r19
     ce8:	19 f0       	breq	.+6      	; 0xcf0 <dtoa_prf+0x152>
     cea:	41 93       	st	Z+, r20
     cec:	31 50       	subi	r19, 0x01	; 1
     cee:	fb cf       	rjmp	.-10     	; 0xce6 <dtoa_prf+0x148>
     cf0:	fc 01       	movw	r30, r24
     cf2:	e2 0f       	add	r30, r18
     cf4:	f1 1d       	adc	r31, r1
     cf6:	10 82       	st	Z, r1
     cf8:	8e ef       	ldi	r24, 0xFE	; 254
     cfa:	9f ef       	ldi	r25, 0xFF	; 255
     cfc:	a6 c0       	rjmp	.+332    	; 0xe4a <dtoa_prf+0x2ac>
     cfe:	21 e0       	ldi	r18, 0x01	; 1
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	91 11       	cpse	r25, r1
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <dtoa_prf+0x16c>
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	16 16       	cp	r1, r22
     d0c:	17 06       	cpc	r1, r23
     d0e:	1c f4       	brge	.+6      	; 0xd16 <dtoa_prf+0x178>
     d10:	fb 01       	movw	r30, r22
     d12:	31 96       	adiw	r30, 0x01	; 1
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <dtoa_prf+0x17c>
     d16:	e1 e0       	ldi	r30, 0x01	; 1
     d18:	f0 e0       	ldi	r31, 0x00	; 0
     d1a:	2e 0f       	add	r18, r30
     d1c:	3f 1f       	adc	r19, r31
     d1e:	bb 20       	and	r11, r11
     d20:	21 f0       	breq	.+8      	; 0xd2a <dtoa_prf+0x18c>
     d22:	eb 2d       	mov	r30, r11
     d24:	f0 e0       	ldi	r31, 0x00	; 0
     d26:	31 96       	adiw	r30, 0x01	; 1
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <dtoa_prf+0x190>
     d2a:	e0 e0       	ldi	r30, 0x00	; 0
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	2e 0f       	add	r18, r30
     d30:	3f 1f       	adc	r19, r31
     d32:	e1 2f       	mov	r30, r17
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	2e 17       	cp	r18, r30
     d38:	3f 07       	cpc	r19, r31
     d3a:	1c f4       	brge	.+6      	; 0xd42 <dtoa_prf+0x1a4>
     d3c:	12 1b       	sub	r17, r18
     d3e:	21 2f       	mov	r18, r17
     d40:	01 c0       	rjmp	.+2      	; 0xd44 <dtoa_prf+0x1a6>
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	8e 2d       	mov	r24, r14
     d46:	88 71       	andi	r24, 0x18	; 24
     d48:	59 f4       	brne	.+22     	; 0xd60 <dtoa_prf+0x1c2>
     d4a:	f6 01       	movw	r30, r12
     d4c:	82 2f       	mov	r24, r18
     d4e:	30 e2       	ldi	r19, 0x20	; 32
     d50:	88 23       	and	r24, r24
     d52:	19 f0       	breq	.+6      	; 0xd5a <dtoa_prf+0x1bc>
     d54:	31 93       	st	Z+, r19
     d56:	81 50       	subi	r24, 0x01	; 1
     d58:	fb cf       	rjmp	.-10     	; 0xd50 <dtoa_prf+0x1b2>
     d5a:	c2 0e       	add	r12, r18
     d5c:	d1 1c       	adc	r13, r1
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	99 23       	and	r25, r25
     d62:	29 f0       	breq	.+10     	; 0xd6e <dtoa_prf+0x1d0>
     d64:	d6 01       	movw	r26, r12
     d66:	9c 93       	st	X, r25
     d68:	f6 01       	movw	r30, r12
     d6a:	31 96       	adiw	r30, 0x01	; 1
     d6c:	6f 01       	movw	r12, r30
     d6e:	51 11       	cpse	r21, r1
     d70:	0b c0       	rjmp	.+22     	; 0xd88 <dtoa_prf+0x1ea>
     d72:	f6 01       	movw	r30, r12
     d74:	82 2f       	mov	r24, r18
     d76:	90 e3       	ldi	r25, 0x30	; 48
     d78:	88 23       	and	r24, r24
     d7a:	19 f0       	breq	.+6      	; 0xd82 <dtoa_prf+0x1e4>
     d7c:	91 93       	st	Z+, r25
     d7e:	81 50       	subi	r24, 0x01	; 1
     d80:	fb cf       	rjmp	.-10     	; 0xd78 <dtoa_prf+0x1da>
     d82:	c2 0e       	add	r12, r18
     d84:	d1 1c       	adc	r13, r1
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	0f 2d       	mov	r16, r15
     d8a:	06 0f       	add	r16, r22
     d8c:	9a 81       	ldd	r25, Y+2	; 0x02
     d8e:	34 2f       	mov	r19, r20
     d90:	30 71       	andi	r19, 0x10	; 16
     d92:	44 ff       	sbrs	r20, 4
     d94:	03 c0       	rjmp	.+6      	; 0xd9c <dtoa_prf+0x1fe>
     d96:	91 33       	cpi	r25, 0x31	; 49
     d98:	09 f4       	brne	.+2      	; 0xd9c <dtoa_prf+0x1fe>
     d9a:	01 50       	subi	r16, 0x01	; 1
     d9c:	10 16       	cp	r1, r16
     d9e:	24 f4       	brge	.+8      	; 0xda8 <dtoa_prf+0x20a>
     da0:	09 30       	cpi	r16, 0x09	; 9
     da2:	18 f0       	brcs	.+6      	; 0xdaa <dtoa_prf+0x20c>
     da4:	08 e0       	ldi	r16, 0x08	; 8
     da6:	01 c0       	rjmp	.+2      	; 0xdaa <dtoa_prf+0x20c>
     da8:	01 e0       	ldi	r16, 0x01	; 1
     daa:	ab 01       	movw	r20, r22
     dac:	77 ff       	sbrs	r23, 7
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <dtoa_prf+0x216>
     db0:	40 e0       	ldi	r20, 0x00	; 0
     db2:	50 e0       	ldi	r21, 0x00	; 0
     db4:	fb 01       	movw	r30, r22
     db6:	e4 1b       	sub	r30, r20
     db8:	f5 0b       	sbc	r31, r21
     dba:	a1 e0       	ldi	r26, 0x01	; 1
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	ac 0f       	add	r26, r28
     dc0:	bd 1f       	adc	r27, r29
     dc2:	ea 0f       	add	r30, r26
     dc4:	fb 1f       	adc	r31, r27
     dc6:	8e e2       	ldi	r24, 0x2E	; 46
     dc8:	a8 2e       	mov	r10, r24
     dca:	4b 01       	movw	r8, r22
     dcc:	80 1a       	sub	r8, r16
     dce:	91 08       	sbc	r9, r1
     dd0:	0b 2d       	mov	r16, r11
     dd2:	10 e0       	ldi	r17, 0x00	; 0
     dd4:	11 95       	neg	r17
     dd6:	01 95       	neg	r16
     dd8:	11 09       	sbc	r17, r1
     dda:	4f 3f       	cpi	r20, 0xFF	; 255
     ddc:	bf ef       	ldi	r27, 0xFF	; 255
     dde:	5b 07       	cpc	r21, r27
     de0:	21 f4       	brne	.+8      	; 0xdea <dtoa_prf+0x24c>
     de2:	d6 01       	movw	r26, r12
     de4:	ac 92       	st	X, r10
     de6:	11 96       	adiw	r26, 0x01	; 1
     de8:	6d 01       	movw	r12, r26
     dea:	64 17       	cp	r22, r20
     dec:	75 07       	cpc	r23, r21
     dee:	2c f0       	brlt	.+10     	; 0xdfa <dtoa_prf+0x25c>
     df0:	84 16       	cp	r8, r20
     df2:	95 06       	cpc	r9, r21
     df4:	14 f4       	brge	.+4      	; 0xdfa <dtoa_prf+0x25c>
     df6:	81 81       	ldd	r24, Z+1	; 0x01
     df8:	01 c0       	rjmp	.+2      	; 0xdfc <dtoa_prf+0x25e>
     dfa:	80 e3       	ldi	r24, 0x30	; 48
     dfc:	41 50       	subi	r20, 0x01	; 1
     dfe:	51 09       	sbc	r21, r1
     e00:	31 96       	adiw	r30, 0x01	; 1
     e02:	d6 01       	movw	r26, r12
     e04:	11 96       	adiw	r26, 0x01	; 1
     e06:	7d 01       	movw	r14, r26
     e08:	40 17       	cp	r20, r16
     e0a:	51 07       	cpc	r21, r17
     e0c:	24 f0       	brlt	.+8      	; 0xe16 <dtoa_prf+0x278>
     e0e:	d6 01       	movw	r26, r12
     e10:	8c 93       	st	X, r24
     e12:	67 01       	movw	r12, r14
     e14:	e2 cf       	rjmp	.-60     	; 0xdda <dtoa_prf+0x23c>
     e16:	64 17       	cp	r22, r20
     e18:	75 07       	cpc	r23, r21
     e1a:	39 f4       	brne	.+14     	; 0xe2a <dtoa_prf+0x28c>
     e1c:	96 33       	cpi	r25, 0x36	; 54
     e1e:	20 f4       	brcc	.+8      	; 0xe28 <dtoa_prf+0x28a>
     e20:	95 33       	cpi	r25, 0x35	; 53
     e22:	19 f4       	brne	.+6      	; 0xe2a <dtoa_prf+0x28c>
     e24:	31 11       	cpse	r19, r1
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <dtoa_prf+0x28c>
     e28:	81 e3       	ldi	r24, 0x31	; 49
     e2a:	f6 01       	movw	r30, r12
     e2c:	80 83       	st	Z, r24
     e2e:	f7 01       	movw	r30, r14
     e30:	82 2f       	mov	r24, r18
     e32:	90 e2       	ldi	r25, 0x20	; 32
     e34:	88 23       	and	r24, r24
     e36:	19 f0       	breq	.+6      	; 0xe3e <dtoa_prf+0x2a0>
     e38:	91 93       	st	Z+, r25
     e3a:	81 50       	subi	r24, 0x01	; 1
     e3c:	fb cf       	rjmp	.-10     	; 0xe34 <dtoa_prf+0x296>
     e3e:	f7 01       	movw	r30, r14
     e40:	e2 0f       	add	r30, r18
     e42:	f1 1d       	adc	r31, r1
     e44:	10 82       	st	Z, r1
     e46:	80 e0       	ldi	r24, 0x00	; 0
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	29 96       	adiw	r28, 0x09	; 9
     e4c:	ec e0       	ldi	r30, 0x0C	; 12
     e4e:	0c 94 23 08 	jmp	0x1046	; 0x1046 <__epilogue_restores__+0xc>

00000e52 <__ftoa_engine>:
     e52:	28 30       	cpi	r18, 0x08	; 8
     e54:	08 f0       	brcs	.+2      	; 0xe58 <__ftoa_engine+0x6>
     e56:	27 e0       	ldi	r18, 0x07	; 7
     e58:	33 27       	eor	r19, r19
     e5a:	da 01       	movw	r26, r20
     e5c:	99 0f       	add	r25, r25
     e5e:	31 1d       	adc	r19, r1
     e60:	87 fd       	sbrc	r24, 7
     e62:	91 60       	ori	r25, 0x01	; 1
     e64:	00 96       	adiw	r24, 0x00	; 0
     e66:	61 05       	cpc	r22, r1
     e68:	71 05       	cpc	r23, r1
     e6a:	39 f4       	brne	.+14     	; 0xe7a <__ftoa_engine+0x28>
     e6c:	32 60       	ori	r19, 0x02	; 2
     e6e:	2e 5f       	subi	r18, 0xFE	; 254
     e70:	3d 93       	st	X+, r19
     e72:	30 e3       	ldi	r19, 0x30	; 48
     e74:	2a 95       	dec	r18
     e76:	e1 f7       	brne	.-8      	; 0xe70 <__ftoa_engine+0x1e>
     e78:	08 95       	ret
     e7a:	9f 3f       	cpi	r25, 0xFF	; 255
     e7c:	30 f0       	brcs	.+12     	; 0xe8a <__ftoa_engine+0x38>
     e7e:	80 38       	cpi	r24, 0x80	; 128
     e80:	71 05       	cpc	r23, r1
     e82:	61 05       	cpc	r22, r1
     e84:	09 f0       	breq	.+2      	; 0xe88 <__ftoa_engine+0x36>
     e86:	3c 5f       	subi	r19, 0xFC	; 252
     e88:	3c 5f       	subi	r19, 0xFC	; 252
     e8a:	3d 93       	st	X+, r19
     e8c:	91 30       	cpi	r25, 0x01	; 1
     e8e:	08 f0       	brcs	.+2      	; 0xe92 <__ftoa_engine+0x40>
     e90:	80 68       	ori	r24, 0x80	; 128
     e92:	91 1d       	adc	r25, r1
     e94:	df 93       	push	r29
     e96:	cf 93       	push	r28
     e98:	1f 93       	push	r17
     e9a:	0f 93       	push	r16
     e9c:	ff 92       	push	r15
     e9e:	ef 92       	push	r14
     ea0:	19 2f       	mov	r17, r25
     ea2:	98 7f       	andi	r25, 0xF8	; 248
     ea4:	96 95       	lsr	r25
     ea6:	e9 2f       	mov	r30, r25
     ea8:	96 95       	lsr	r25
     eaa:	96 95       	lsr	r25
     eac:	e9 0f       	add	r30, r25
     eae:	ff 27       	eor	r31, r31
     eb0:	e2 55       	subi	r30, 0x52	; 82
     eb2:	ff 4f       	sbci	r31, 0xFF	; 255
     eb4:	99 27       	eor	r25, r25
     eb6:	33 27       	eor	r19, r19
     eb8:	ee 24       	eor	r14, r14
     eba:	ff 24       	eor	r15, r15
     ebc:	a7 01       	movw	r20, r14
     ebe:	e7 01       	movw	r28, r14
     ec0:	05 90       	lpm	r0, Z+
     ec2:	08 94       	sec
     ec4:	07 94       	ror	r0
     ec6:	28 f4       	brcc	.+10     	; 0xed2 <__ftoa_engine+0x80>
     ec8:	36 0f       	add	r19, r22
     eca:	e7 1e       	adc	r14, r23
     ecc:	f8 1e       	adc	r15, r24
     ece:	49 1f       	adc	r20, r25
     ed0:	51 1d       	adc	r21, r1
     ed2:	66 0f       	add	r22, r22
     ed4:	77 1f       	adc	r23, r23
     ed6:	88 1f       	adc	r24, r24
     ed8:	99 1f       	adc	r25, r25
     eda:	06 94       	lsr	r0
     edc:	a1 f7       	brne	.-24     	; 0xec6 <__ftoa_engine+0x74>
     ede:	05 90       	lpm	r0, Z+
     ee0:	07 94       	ror	r0
     ee2:	28 f4       	brcc	.+10     	; 0xeee <__ftoa_engine+0x9c>
     ee4:	e7 0e       	add	r14, r23
     ee6:	f8 1e       	adc	r15, r24
     ee8:	49 1f       	adc	r20, r25
     eea:	56 1f       	adc	r21, r22
     eec:	c1 1d       	adc	r28, r1
     eee:	77 0f       	add	r23, r23
     ef0:	88 1f       	adc	r24, r24
     ef2:	99 1f       	adc	r25, r25
     ef4:	66 1f       	adc	r22, r22
     ef6:	06 94       	lsr	r0
     ef8:	a1 f7       	brne	.-24     	; 0xee2 <__ftoa_engine+0x90>
     efa:	05 90       	lpm	r0, Z+
     efc:	07 94       	ror	r0
     efe:	28 f4       	brcc	.+10     	; 0xf0a <__ftoa_engine+0xb8>
     f00:	f8 0e       	add	r15, r24
     f02:	49 1f       	adc	r20, r25
     f04:	56 1f       	adc	r21, r22
     f06:	c7 1f       	adc	r28, r23
     f08:	d1 1d       	adc	r29, r1
     f0a:	88 0f       	add	r24, r24
     f0c:	99 1f       	adc	r25, r25
     f0e:	66 1f       	adc	r22, r22
     f10:	77 1f       	adc	r23, r23
     f12:	06 94       	lsr	r0
     f14:	a1 f7       	brne	.-24     	; 0xefe <__ftoa_engine+0xac>
     f16:	05 90       	lpm	r0, Z+
     f18:	07 94       	ror	r0
     f1a:	20 f4       	brcc	.+8      	; 0xf24 <__ftoa_engine+0xd2>
     f1c:	49 0f       	add	r20, r25
     f1e:	56 1f       	adc	r21, r22
     f20:	c7 1f       	adc	r28, r23
     f22:	d8 1f       	adc	r29, r24
     f24:	99 0f       	add	r25, r25
     f26:	66 1f       	adc	r22, r22
     f28:	77 1f       	adc	r23, r23
     f2a:	88 1f       	adc	r24, r24
     f2c:	06 94       	lsr	r0
     f2e:	a9 f7       	brne	.-22     	; 0xf1a <__ftoa_engine+0xc8>
     f30:	84 91       	lpm	r24, Z
     f32:	10 95       	com	r17
     f34:	17 70       	andi	r17, 0x07	; 7
     f36:	41 f0       	breq	.+16     	; 0xf48 <__ftoa_engine+0xf6>
     f38:	d6 95       	lsr	r29
     f3a:	c7 95       	ror	r28
     f3c:	57 95       	ror	r21
     f3e:	47 95       	ror	r20
     f40:	f7 94       	ror	r15
     f42:	e7 94       	ror	r14
     f44:	1a 95       	dec	r17
     f46:	c1 f7       	brne	.-16     	; 0xf38 <__ftoa_engine+0xe6>
     f48:	e4 e5       	ldi	r30, 0x54	; 84
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	68 94       	set
     f4e:	15 90       	lpm	r1, Z+
     f50:	15 91       	lpm	r17, Z+
     f52:	35 91       	lpm	r19, Z+
     f54:	65 91       	lpm	r22, Z+
     f56:	95 91       	lpm	r25, Z+
     f58:	05 90       	lpm	r0, Z+
     f5a:	7f e2       	ldi	r23, 0x2F	; 47
     f5c:	73 95       	inc	r23
     f5e:	e1 18       	sub	r14, r1
     f60:	f1 0a       	sbc	r15, r17
     f62:	43 0b       	sbc	r20, r19
     f64:	56 0b       	sbc	r21, r22
     f66:	c9 0b       	sbc	r28, r25
     f68:	d0 09       	sbc	r29, r0
     f6a:	c0 f7       	brcc	.-16     	; 0xf5c <__ftoa_engine+0x10a>
     f6c:	e1 0c       	add	r14, r1
     f6e:	f1 1e       	adc	r15, r17
     f70:	43 1f       	adc	r20, r19
     f72:	56 1f       	adc	r21, r22
     f74:	c9 1f       	adc	r28, r25
     f76:	d0 1d       	adc	r29, r0
     f78:	7e f4       	brtc	.+30     	; 0xf98 <__ftoa_engine+0x146>
     f7a:	70 33       	cpi	r23, 0x30	; 48
     f7c:	11 f4       	brne	.+4      	; 0xf82 <__ftoa_engine+0x130>
     f7e:	8a 95       	dec	r24
     f80:	e6 cf       	rjmp	.-52     	; 0xf4e <__ftoa_engine+0xfc>
     f82:	e8 94       	clt
     f84:	01 50       	subi	r16, 0x01	; 1
     f86:	30 f0       	brcs	.+12     	; 0xf94 <__ftoa_engine+0x142>
     f88:	08 0f       	add	r16, r24
     f8a:	0a f4       	brpl	.+2      	; 0xf8e <__ftoa_engine+0x13c>
     f8c:	00 27       	eor	r16, r16
     f8e:	02 17       	cp	r16, r18
     f90:	08 f4       	brcc	.+2      	; 0xf94 <__ftoa_engine+0x142>
     f92:	20 2f       	mov	r18, r16
     f94:	23 95       	inc	r18
     f96:	02 2f       	mov	r16, r18
     f98:	7a 33       	cpi	r23, 0x3A	; 58
     f9a:	28 f0       	brcs	.+10     	; 0xfa6 <__ftoa_engine+0x154>
     f9c:	79 e3       	ldi	r23, 0x39	; 57
     f9e:	7d 93       	st	X+, r23
     fa0:	2a 95       	dec	r18
     fa2:	e9 f7       	brne	.-6      	; 0xf9e <__ftoa_engine+0x14c>
     fa4:	10 c0       	rjmp	.+32     	; 0xfc6 <__ftoa_engine+0x174>
     fa6:	7d 93       	st	X+, r23
     fa8:	2a 95       	dec	r18
     faa:	89 f6       	brne	.-94     	; 0xf4e <__ftoa_engine+0xfc>
     fac:	06 94       	lsr	r0
     fae:	97 95       	ror	r25
     fb0:	67 95       	ror	r22
     fb2:	37 95       	ror	r19
     fb4:	17 95       	ror	r17
     fb6:	17 94       	ror	r1
     fb8:	e1 18       	sub	r14, r1
     fba:	f1 0a       	sbc	r15, r17
     fbc:	43 0b       	sbc	r20, r19
     fbe:	56 0b       	sbc	r21, r22
     fc0:	c9 0b       	sbc	r28, r25
     fc2:	d0 09       	sbc	r29, r0
     fc4:	98 f0       	brcs	.+38     	; 0xfec <__ftoa_engine+0x19a>
     fc6:	23 95       	inc	r18
     fc8:	7e 91       	ld	r23, -X
     fca:	73 95       	inc	r23
     fcc:	7a 33       	cpi	r23, 0x3A	; 58
     fce:	08 f0       	brcs	.+2      	; 0xfd2 <__ftoa_engine+0x180>
     fd0:	70 e3       	ldi	r23, 0x30	; 48
     fd2:	7c 93       	st	X, r23
     fd4:	20 13       	cpse	r18, r16
     fd6:	b8 f7       	brcc	.-18     	; 0xfc6 <__ftoa_engine+0x174>
     fd8:	7e 91       	ld	r23, -X
     fda:	70 61       	ori	r23, 0x10	; 16
     fdc:	7d 93       	st	X+, r23
     fde:	30 f0       	brcs	.+12     	; 0xfec <__ftoa_engine+0x19a>
     fe0:	83 95       	inc	r24
     fe2:	71 e3       	ldi	r23, 0x31	; 49
     fe4:	7d 93       	st	X+, r23
     fe6:	70 e3       	ldi	r23, 0x30	; 48
     fe8:	2a 95       	dec	r18
     fea:	e1 f7       	brne	.-8      	; 0xfe4 <__ftoa_engine+0x192>
     fec:	11 24       	eor	r1, r1
     fee:	ef 90       	pop	r14
     ff0:	ff 90       	pop	r15
     ff2:	0f 91       	pop	r16
     ff4:	1f 91       	pop	r17
     ff6:	cf 91       	pop	r28
     ff8:	df 91       	pop	r29
     ffa:	99 27       	eor	r25, r25
     ffc:	87 fd       	sbrc	r24, 7
     ffe:	90 95       	com	r25
    1000:	08 95       	ret

00001002 <__prologue_saves__>:
    1002:	2f 92       	push	r2
    1004:	3f 92       	push	r3
    1006:	4f 92       	push	r4
    1008:	5f 92       	push	r5
    100a:	6f 92       	push	r6
    100c:	7f 92       	push	r7
    100e:	8f 92       	push	r8
    1010:	9f 92       	push	r9
    1012:	af 92       	push	r10
    1014:	bf 92       	push	r11
    1016:	cf 92       	push	r12
    1018:	df 92       	push	r13
    101a:	ef 92       	push	r14
    101c:	ff 92       	push	r15
    101e:	0f 93       	push	r16
    1020:	1f 93       	push	r17
    1022:	cf 93       	push	r28
    1024:	df 93       	push	r29
    1026:	cd b7       	in	r28, 0x3d	; 61
    1028:	de b7       	in	r29, 0x3e	; 62
    102a:	ca 1b       	sub	r28, r26
    102c:	db 0b       	sbc	r29, r27
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	de bf       	out	0x3e, r29	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	cd bf       	out	0x3d, r28	; 61
    1038:	09 94       	ijmp

0000103a <__epilogue_restores__>:
    103a:	2a 88       	ldd	r2, Y+18	; 0x12
    103c:	39 88       	ldd	r3, Y+17	; 0x11
    103e:	48 88       	ldd	r4, Y+16	; 0x10
    1040:	5f 84       	ldd	r5, Y+15	; 0x0f
    1042:	6e 84       	ldd	r6, Y+14	; 0x0e
    1044:	7d 84       	ldd	r7, Y+13	; 0x0d
    1046:	8c 84       	ldd	r8, Y+12	; 0x0c
    1048:	9b 84       	ldd	r9, Y+11	; 0x0b
    104a:	aa 84       	ldd	r10, Y+10	; 0x0a
    104c:	b9 84       	ldd	r11, Y+9	; 0x09
    104e:	c8 84       	ldd	r12, Y+8	; 0x08
    1050:	df 80       	ldd	r13, Y+7	; 0x07
    1052:	ee 80       	ldd	r14, Y+6	; 0x06
    1054:	fd 80       	ldd	r15, Y+5	; 0x05
    1056:	0c 81       	ldd	r16, Y+4	; 0x04
    1058:	1b 81       	ldd	r17, Y+3	; 0x03
    105a:	aa 81       	ldd	r26, Y+2	; 0x02
    105c:	b9 81       	ldd	r27, Y+1	; 0x01
    105e:	ce 0f       	add	r28, r30
    1060:	d1 1d       	adc	r29, r1
    1062:	0f b6       	in	r0, 0x3f	; 63
    1064:	f8 94       	cli
    1066:	de bf       	out	0x3e, r29	; 62
    1068:	0f be       	out	0x3f, r0	; 63
    106a:	cd bf       	out	0x3d, r28	; 61
    106c:	ed 01       	movw	r28, r26
    106e:	08 95       	ret

00001070 <_exit>:
    1070:	f8 94       	cli

00001072 <__stop_program>:
    1072:	ff cf       	rjmp	.-2      	; 0x1072 <__stop_program>
